name: Security GHAS Checks

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: write
  security-events: write
  issues: write

jobs:
  codeql:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, python
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  semgrep:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Run Semgrep
        uses: returntocorp/semgrep-action@fcd5ab7459e8d91cb1777481980d1b18b4fc6735
        with:
          config: auto
          sarif: true
          output: semgrep.sarif
        continue-on-error: true
      - name: Upload SARIF to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif

  code-scanning:
    runs-on: ubuntu-latest
    needs: [codeql, semgrep]
    steps:
      - name: Fetch Code Scanning Alerts
        run: |
          echo "[]" > code-scanning-alerts.json
          for page in {1..10}; do
            resp=$(curl -s -H "Authorization: token ${{secrets.PAT_TOKEN}}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/code-scanning/alerts?per_page=100&page=$page")
            count=$(echo "$resp" | jq length)
            if [ "$count" -eq 0 ]; then break; fi
            jq -s '.[0] + .[1]' code-scanning-alerts.json <(echo "$resp") > tmp.json
            mv tmp.json code-scanning-alerts.json
            if [ "$count" -lt 100 ]; then break; fi
          done
      - name: Upload Code Scanning Alerts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: code-scanning-alerts
          path: code-scanning-alerts.json

  secret-scanning:
    runs-on: ubuntu-latest
    needs: [code-scanning]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: secret-scanning-custom-action
        uses: advanced-security/secret-scanning-tools@v1
      - name: Fetch Secret Scanning Alerts
        run: |
          curl -H "Authorization: token ${{secrets.PAT_TOKEN}}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/secret-scanning/alerts \
               -o secret-scanning-alerts.json
      - name: Upload Secret Scanning Alerts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: secret-scanning-alerts
          path: secret-scanning-alerts.json

  dependabot:
    runs-on: ubuntu-latest
    needs: [code-scanning]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Fetch Dependabot Alerts
        run: |
          echo "[]" > dependabot-alerts.json
          for page in {1..10}; do
            resp=$(curl -s -H "Authorization: token ${{secrets.PAT_TOKEN}}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/dependabot/alerts?per_page=100&page=$page")
            count=$(echo "$resp" | jq length)
            if [ "$count" -eq 0 ]; then break; fi
            jq -s '.[0] + .[1]' dependabot-alerts.json <(echo "$resp") > tmp.json
            mv tmp.json dependabot-alerts.json
            if [ "$count" -lt 100 ]; then break; fi
          done
      - name: Upload Dependabot Alerts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: dependabot-alerts
          path: dependabot-alerts.json

  zap_scan:
    runs-on: ubuntu-latest
    needs: [code-scanning]
    name: OWSAP ZAP SCAN
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.14.0
        with:
          token: ${{ secrets.PAT_TOKEN }}
          target: 'https://preview.owasp-juice.shop'
          cmd_options: '-J zap_report.json -w zap_report.md'
      - name: Updating issues 
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          gh issue create \
            --title "ZAP Scan Baseline Report" \
            --body "$(cat zap_report.md)"
      - name: Upload ZAP JSON Report
        uses: actions/upload-artifact@v4.6.2
        with:
          name: zapreport
          path: zap_report.json

  combine-alerts:
    runs-on: ubuntu-latest
    needs: [secret-scanning, dependabot, zap_scan, code-scanning]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download Code Scanning Alerts
        uses: actions/download-artifact@v4
        with:
          name: code-scanning-alerts
      - name: Download Secret Scanning Alerts
        uses: actions/download-artifact@v4
        with:
          name: secret-scanning-alerts
      - name: Download Dependabot Alerts
        uses: actions/download-artifact@v4
        with:
          name: dependabot-alerts
      - name: Download ZAP JSON Report
        uses: actions/download-artifact@v4
        with:
          name: zapreport
      - name: Combine All Alerts into One JSON
        run: |
          jq -n \
            --slurpfile code code-scanning-alerts.json \
            --slurpfile secret secret-scanning-alerts.json \
            --slurpfile dependabot dependabot-alerts.json \
            --slurpfile zap zap_report.json \
            '{code_scanning: $code[0], secret_scanning: $secret[0], dependabot: $dependabot[0], zap: $zap[0]}' \
            > all-alerts.json
      - name: Upload Combined Alerts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: all-alerts
          path: all-alerts.json
      - name: Commit and push all-alerts.json
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add all-alerts.json
          git commit -m "Update all-alerts.json [skip ci]" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
