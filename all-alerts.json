{
  "code_scanning": [
    {
      "number": 20,
      "created_at": "2025-06-15T15:08:54Z",
      "updated_at": "2025-06-15T15:08:54Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/20",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/code-scanning/20",
      "state": "open",
      "fixed_at": null,
      "dismissed_by": null,
      "dismissed_at": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "rule": {
        "id": "java.lang.security.audit.object-deserialization.object-deserialization",
        "severity": "warning",
        "description": "Semgrep Finding: java.lang.security.audit.object-deserialization.object-deserialization",
        "name": "java.lang.security.audit.object-deserialization.object-deserialization",
        "tags": [
          "CWE-502: Deserialization of Untrusted Data",
          "LOW CONFIDENCE",
          "OWASP-A08:2017 - Insecure Deserialization",
          "OWASP-A08:2021 - Software and Data Integrity Failures",
          "security"
        ],
        "full_description": "Found object deserialization using ObjectInputStream. Deserializing entire Java objects is dangerous because malicious actors can create Java object streams with unintended consequences. Ensure that the objects being deserialized are not user-controlled. If this must be done, consider using HMACs to sign the data stream to make sure it is not tampered with, or consider only transmitting object fields and populating a new object.",
        "help": "Found object deserialization using ObjectInputStream. Deserializing entire Java objects is dangerous because malicious actors can create Java object streams with unintended consequences. Ensure that the objects being deserialized are not user-controlled. If this must be done, consider using HMACs to sign the data stream to make sure it is not tampered with, or consider only transmitting object fields and populating a new object.\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/java.lang.security.audit.object-deserialization.object-deserialization)\n - [https://www.owasp.org/index.php/Deserialization_of_untrusted_data](https://www.owasp.org/index.php/Deserialization_of_untrusted_data)\n - [https://www.oracle.com/java/technologies/javase/seccodeguide.html#8](https://www.oracle.com/java/technologies/javase/seccodeguide.html#8)\n",
        "help_uri": "https://semgrep.dev/r/java.lang.security.audit.object-deserialization.object-deserialization"
      },
      "tool": {
        "name": "Semgrep",
        "guid": null,
        "version": "1.36.0"
      },
      "most_recent_instance": {
        "ref": "refs/heads/main",
        "analysis_key": ".github/workflows/GHAS.yml:code-scanning",
        "environment": "{}",
        "category": ".github/workflows/GHAS.yml:code-scanning",
        "state": "open",
        "commit_sha": "326486b80ad625d1aea9c0af815b4d05ade1d6f7",
        "message": {
          "text": "Found object deserialization using ObjectInputStream. Deserializing entire Java objects is dangerous because malicious actors can create Java object streams with unintended consequences. Ensure that the objects being deserialized are not user-controlled. If this must be done, consider using HMACs to sign the data stream to make sure it is not tampered with, or consider only transmitting object fields and populating a new object."
        },
        "location": {
          "path": "storage-service/src/main/java/com/github/advancedsecurity/storageservice/controllers/BlobController.java",
          "start_line": 44,
          "end_line": 44,
          "start_column": 9,
          "end_column": 66
        },
        "classifications": []
      },
      "instances_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/20/instances",
      "dismissal_approved_by": null
    },
    {
      "number": 19,
      "created_at": "2025-06-15T13:16:16Z",
      "updated_at": "2025-06-15T15:08:54Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/19",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/code-scanning/19",
      "state": "open",
      "fixed_at": null,
      "dismissed_by": null,
      "dismissed_at": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "rule": {
        "id": "generic.secrets.security.detected-aws-access-key-id-value.detected-aws-access-key-id-value",
        "severity": "error",
        "description": "Semgrep Finding: generic.secrets.security.detected-aws-access-key-id-value.detected-aws-access-key-id-value",
        "name": "generic.secrets.security.detected-aws-access-key-id-value.detected-aws-access-key-id-value",
        "tags": [
          "CWE-798: Use of Hard-coded Credentials",
          "LOW CONFIDENCE",
          "OWASP-A07:2021 - Identification and Authentication Failures",
          "security"
        ],
        "full_description": "AWS Access Key ID Value detected. This is a sensitive credential and should not be hardcoded here. Instead, read this value from an environment variable or keep it in a separate, private file.",
        "help": "AWS Access Key ID Value detected. This is a sensitive credential and should not be hardcoded here. Instead, read this value from an environment variable or keep it in a separate, private file.\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/generic.secrets.security.detected-aws-access-key-id-value.detected-aws-access-key-id-value)\n - [https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures](https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures)\n",
        "help_uri": "https://semgrep.dev/r/generic.secrets.security.detected-aws-access-key-id-value.detected-aws-access-key-id-value"
      },
      "tool": {
        "name": "Semgrep",
        "guid": null,
        "version": "1.36.0"
      },
      "most_recent_instance": {
        "ref": "refs/heads/main",
        "analysis_key": ".github/workflows/GHAS.yml:code-scanning",
        "environment": "{}",
        "category": ".github/workflows/GHAS.yml:code-scanning",
        "state": "open",
        "commit_sha": "326486b80ad625d1aea9c0af815b4d05ade1d6f7",
        "message": {
          "text": "AWS Access Key ID Value detected. This is a sensitive credential and should not be hardcoded here. Instead, read this value from an environment variable or keep it in a separate, private file."
        },
        "location": {
          "path": "storage-service/target/classes/application.properties",
          "start_line": 4,
          "end_line": 4,
          "start_column": 34,
          "end_column": 54
        },
        "classifications": []
      },
      "instances_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/19/instances",
      "dismissal_approved_by": null
    },
    {
      "number": 18,
      "created_at": "2025-06-15T13:16:16Z",
      "updated_at": "2025-06-15T15:08:54Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/18",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/code-scanning/18",
      "state": "open",
      "fixed_at": null,
      "dismissed_by": null,
      "dismissed_at": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "rule": {
        "id": "generic.secrets.security.detected-aws-secret-access-key.detected-aws-secret-access-key",
        "severity": "error",
        "description": "Semgrep Finding: generic.secrets.security.detected-aws-secret-access-key.detected-aws-secret-access-key",
        "name": "generic.secrets.security.detected-aws-secret-access-key.detected-aws-secret-access-key",
        "tags": [
          "CWE-798: Use of Hard-coded Credentials",
          "LOW CONFIDENCE",
          "OWASP-A07:2021 - Identification and Authentication Failures",
          "security"
        ],
        "full_description": "AWS Secret Access Key detected",
        "help": "AWS Secret Access Key detected\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/generic.secrets.security.detected-aws-secret-access-key.detected-aws-secret-access-key)\n - [https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures](https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures)\n",
        "help_uri": "https://semgrep.dev/r/generic.secrets.security.detected-aws-secret-access-key.detected-aws-secret-access-key"
      },
      "tool": {
        "name": "Semgrep",
        "guid": null,
        "version": "1.36.0"
      },
      "most_recent_instance": {
        "ref": "refs/heads/main",
        "analysis_key": ".github/workflows/GHAS.yml:code-scanning",
        "environment": "{}",
        "category": ".github/workflows/GHAS.yml:code-scanning",
        "state": "open",
        "commit_sha": "326486b80ad625d1aea9c0af815b4d05ade1d6f7",
        "message": {
          "text": "AWS Secret Access Key detected"
        },
        "location": {
          "path": "storage-service/src/main/resources/application.properties",
          "start_line": 7,
          "end_line": 7,
          "start_column": 1,
          "end_column": 63
        },
        "classifications": []
      },
      "instances_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/18/instances",
      "dismissal_approved_by": null
    },
    {
      "number": 17,
      "created_at": "2025-06-15T13:16:16Z",
      "updated_at": "2025-06-15T15:08:54Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/17",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/code-scanning/17",
      "state": "open",
      "fixed_at": null,
      "dismissed_by": null,
      "dismissed_at": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "rule": {
        "id": "generic.secrets.security.detected-aws-access-key-id-value.detected-aws-access-key-id-value",
        "severity": "error",
        "description": "Semgrep Finding: generic.secrets.security.detected-aws-access-key-id-value.detected-aws-access-key-id-value",
        "name": "generic.secrets.security.detected-aws-access-key-id-value.detected-aws-access-key-id-value",
        "tags": [
          "CWE-798: Use of Hard-coded Credentials",
          "LOW CONFIDENCE",
          "OWASP-A07:2021 - Identification and Authentication Failures",
          "security"
        ],
        "full_description": "AWS Access Key ID Value detected. This is a sensitive credential and should not be hardcoded here. Instead, read this value from an environment variable or keep it in a separate, private file.",
        "help": "AWS Access Key ID Value detected. This is a sensitive credential and should not be hardcoded here. Instead, read this value from an environment variable or keep it in a separate, private file.\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/generic.secrets.security.detected-aws-access-key-id-value.detected-aws-access-key-id-value)\n - [https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures](https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures)\n",
        "help_uri": "https://semgrep.dev/r/generic.secrets.security.detected-aws-access-key-id-value.detected-aws-access-key-id-value"
      },
      "tool": {
        "name": "Semgrep",
        "guid": null,
        "version": "1.36.0"
      },
      "most_recent_instance": {
        "ref": "refs/heads/main",
        "analysis_key": ".github/workflows/GHAS.yml:code-scanning",
        "environment": "{}",
        "category": ".github/workflows/GHAS.yml:code-scanning",
        "state": "open",
        "commit_sha": "326486b80ad625d1aea9c0af815b4d05ade1d6f7",
        "message": {
          "text": "AWS Access Key ID Value detected. This is a sensitive credential and should not be hardcoded here. Instead, read this value from an environment variable or keep it in a separate, private file."
        },
        "location": {
          "path": "storage-service/src/main/resources/application.properties",
          "start_line": 6,
          "end_line": 6,
          "start_column": 19,
          "end_column": 39
        },
        "classifications": []
      },
      "instances_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/17/instances",
      "dismissal_approved_by": null
    },
    {
      "number": 16,
      "created_at": "2025-06-15T13:16:16Z",
      "updated_at": "2025-06-15T15:08:54Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/16",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/code-scanning/16",
      "state": "open",
      "fixed_at": null,
      "dismissed_by": null,
      "dismissed_at": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "rule": {
        "id": "generic.secrets.security.detected-aws-secret-access-key.detected-aws-secret-access-key",
        "severity": "error",
        "description": "Semgrep Finding: generic.secrets.security.detected-aws-secret-access-key.detected-aws-secret-access-key",
        "name": "generic.secrets.security.detected-aws-secret-access-key.detected-aws-secret-access-key",
        "tags": [
          "CWE-798: Use of Hard-coded Credentials",
          "LOW CONFIDENCE",
          "OWASP-A07:2021 - Identification and Authentication Failures",
          "security"
        ],
        "full_description": "AWS Secret Access Key detected",
        "help": "AWS Secret Access Key detected\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/generic.secrets.security.detected-aws-secret-access-key.detected-aws-secret-access-key)\n - [https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures](https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures)\n",
        "help_uri": "https://semgrep.dev/r/generic.secrets.security.detected-aws-secret-access-key.detected-aws-secret-access-key"
      },
      "tool": {
        "name": "Semgrep",
        "guid": null,
        "version": "1.36.0"
      },
      "most_recent_instance": {
        "ref": "refs/heads/main",
        "analysis_key": ".github/workflows/GHAS.yml:code-scanning",
        "environment": "{}",
        "category": ".github/workflows/GHAS.yml:code-scanning",
        "state": "open",
        "commit_sha": "326486b80ad625d1aea9c0af815b4d05ade1d6f7",
        "message": {
          "text": "AWS Secret Access Key detected"
        },
        "location": {
          "path": "storage-service/src/main/resources/application.dev.properties",
          "start_line": 2,
          "end_line": 2,
          "start_column": 1,
          "end_column": 53
        },
        "classifications": []
      },
      "instances_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/16/instances",
      "dismissal_approved_by": null
    },
    {
      "number": 15,
      "created_at": "2025-06-15T13:16:16Z",
      "updated_at": "2025-06-15T15:08:54Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/15",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/code-scanning/15",
      "state": "open",
      "fixed_at": null,
      "dismissed_by": null,
      "dismissed_at": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "rule": {
        "id": "generic.secrets.security.detected-aws-access-key-id-value.detected-aws-access-key-id-value",
        "severity": "error",
        "description": "Semgrep Finding: generic.secrets.security.detected-aws-access-key-id-value.detected-aws-access-key-id-value",
        "name": "generic.secrets.security.detected-aws-access-key-id-value.detected-aws-access-key-id-value",
        "tags": [
          "CWE-798: Use of Hard-coded Credentials",
          "LOW CONFIDENCE",
          "OWASP-A07:2021 - Identification and Authentication Failures",
          "security"
        ],
        "full_description": "AWS Access Key ID Value detected. This is a sensitive credential and should not be hardcoded here. Instead, read this value from an environment variable or keep it in a separate, private file.",
        "help": "AWS Access Key ID Value detected. This is a sensitive credential and should not be hardcoded here. Instead, read this value from an environment variable or keep it in a separate, private file.\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/generic.secrets.security.detected-aws-access-key-id-value.detected-aws-access-key-id-value)\n - [https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures](https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures)\n",
        "help_uri": "https://semgrep.dev/r/generic.secrets.security.detected-aws-access-key-id-value.detected-aws-access-key-id-value"
      },
      "tool": {
        "name": "Semgrep",
        "guid": null,
        "version": "1.36.0"
      },
      "most_recent_instance": {
        "ref": "refs/heads/main",
        "analysis_key": ".github/workflows/GHAS.yml:code-scanning",
        "environment": "{}",
        "category": ".github/workflows/GHAS.yml:code-scanning",
        "state": "open",
        "commit_sha": "326486b80ad625d1aea9c0af815b4d05ade1d6f7",
        "message": {
          "text": "AWS Access Key ID Value detected. This is a sensitive credential and should not be hardcoded here. Instead, read this value from an environment variable or keep it in a separate, private file."
        },
        "location": {
          "path": "storage-service/src/main/resources/application.dev.properties",
          "start_line": 1,
          "end_line": 1,
          "start_column": 12,
          "end_column": 32
        },
        "classifications": []
      },
      "instances_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/15/instances",
      "dismissal_approved_by": null
    },
    {
      "number": 14,
      "created_at": "2025-06-15T13:16:16Z",
      "updated_at": "2025-06-15T15:08:54Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/14",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/code-scanning/14",
      "state": "open",
      "fixed_at": null,
      "dismissed_by": null,
      "dismissed_at": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "rule": {
        "id": "java.spring.security.injection.tainted-file-path.tainted-file-path",
        "severity": "error",
        "description": "Semgrep Finding: java.spring.security.injection.tainted-file-path.tainted-file-path",
        "name": "java.spring.security.injection.tainted-file-path.tainted-file-path",
        "tags": [
          "CWE-23: Relative Path Traversal",
          "HIGH CONFIDENCE",
          "OWASP-A01:2021 - Broken Access Control",
          "security"
        ],
        "full_description": "Detected user input controlling a file path. An attacker could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path.",
        "help": "Detected user input controlling a file path. An attacker could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path.\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/java.spring.security.injection.tainted-file-path.tainted-file-path)\n - [https://owasp.org/www-community/attacks/Path_Traversal](https://owasp.org/www-community/attacks/Path_Traversal)\n",
        "help_uri": "https://semgrep.dev/r/java.spring.security.injection.tainted-file-path.tainted-file-path"
      },
      "tool": {
        "name": "Semgrep",
        "guid": null,
        "version": "1.36.0"
      },
      "most_recent_instance": {
        "ref": "refs/heads/main",
        "analysis_key": ".github/workflows/GHAS.yml:code-scanning",
        "environment": "{}",
        "category": ".github/workflows/GHAS.yml:code-scanning",
        "state": "open",
        "commit_sha": "326486b80ad625d1aea9c0af815b4d05ade1d6f7",
        "message": {
          "text": "Detected user input controlling a file path. An attacker could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path."
        },
        "location": {
          "path": "storage-service/src/main/java/com/github/advancedsecurity/storageservice/controllers/BlobController.java",
          "start_line": 55,
          "end_line": 55,
          "start_column": 33,
          "end_column": 133
        },
        "classifications": []
      },
      "instances_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/14/instances",
      "dismissal_approved_by": null
    },
    {
      "number": 13,
      "created_at": "2025-06-15T13:16:16Z",
      "updated_at": "2025-06-15T13:37:24Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/13",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/code-scanning/13",
      "state": "open",
      "fixed_at": null,
      "dismissed_by": null,
      "dismissed_at": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "rule": {
        "id": "java.lang.security.audit.object-deserialization.object-deserialization",
        "severity": "warning",
        "description": "Semgrep Finding: java.lang.security.audit.object-deserialization.object-deserialization",
        "name": "java.lang.security.audit.object-deserialization.object-deserialization",
        "tags": [
          "CWE-502: Deserialization of Untrusted Data",
          "LOW CONFIDENCE",
          "OWASP-A08:2017 - Insecure Deserialization",
          "OWASP-A08:2021 - Software and Data Integrity Failures",
          "security"
        ],
        "full_description": "Found object deserialization using ObjectInputStream. Deserializing entire Java objects is dangerous because malicious actors can create Java object streams with unintended consequences. Ensure that the objects being deserialized are not user-controlled. If this must be done, consider using HMACs to sign the data stream to make sure it is not tampered with, or consider only transmitting object fields and populating a new object.",
        "help": "Found object deserialization using ObjectInputStream. Deserializing entire Java objects is dangerous because malicious actors can create Java object streams with unintended consequences. Ensure that the objects being deserialized are not user-controlled. If this must be done, consider using HMACs to sign the data stream to make sure it is not tampered with, or consider only transmitting object fields and populating a new object.\n\n#### 💎 Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/java.lang.security.audit.object-deserialization.object-deserialization)\n - [https://www.owasp.org/index.php/Deserialization_of_untrusted_data](https://www.owasp.org/index.php/Deserialization_of_untrusted_data)\n - [https://www.oracle.com/java/technologies/javase/seccodeguide.html#8](https://www.oracle.com/java/technologies/javase/seccodeguide.html#8)\n",
        "help_uri": "https://semgrep.dev/r/java.lang.security.audit.object-deserialization.object-deserialization"
      },
      "tool": {
        "name": "Semgrep OSS",
        "guid": null,
        "version": "1.125.0"
      },
      "most_recent_instance": {
        "ref": "refs/heads/main",
        "analysis_key": ".github/workflows/GHAS.yml:code-scanning",
        "environment": "{}",
        "category": ".github/workflows/GHAS.yml:code-scanning",
        "state": "open",
        "commit_sha": "1baf1960dac3281493bed6b9bd793cbcc3c3b4c0",
        "message": {
          "text": "Found object deserialization using ObjectInputStream. Deserializing entire Java objects is dangerous because malicious actors can create Java object streams with unintended consequences. Ensure that the objects being deserialized are not user-controlled. If this must be done, consider using HMACs to sign the data stream to make sure it is not tampered with, or consider only transmitting object fields and populating a new object."
        },
        "location": {
          "path": "storage-service/src/main/java/com/github/advancedsecurity/storageservice/controllers/BlobController.java",
          "start_line": 44,
          "end_line": 44,
          "start_column": 9,
          "end_column": 67
        },
        "classifications": []
      },
      "instances_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/13/instances",
      "dismissal_approved_by": null
    },
    {
      "number": 12,
      "created_at": "2025-06-15T13:16:16Z",
      "updated_at": "2025-06-15T15:08:54Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/12",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/code-scanning/12",
      "state": "open",
      "fixed_at": null,
      "dismissed_by": null,
      "dismissed_at": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "rule": {
        "id": "java.spring.security.audit.spring-csrf-disabled.spring-csrf-disabled",
        "severity": "warning",
        "description": "Semgrep Finding: java.spring.security.audit.spring-csrf-disabled.spring-csrf-disabled",
        "name": "java.spring.security.audit.spring-csrf-disabled.spring-csrf-disabled",
        "tags": [
          "CWE-352: Cross-Site Request Forgery (CSRF)",
          "LOW CONFIDENCE",
          "OWASP-A01:2021 - Broken Access Control",
          "security"
        ],
        "full_description": "CSRF protection is disabled for this configuration. This is a security risk.",
        "help": "CSRF protection is disabled for this configuration. This is a security risk.\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/java.spring.security.audit.spring-csrf-disabled.spring-csrf-disabled)\n - [https://owasp.org/Top10/A01_2021-Broken_Access_Control](https://owasp.org/Top10/A01_2021-Broken_Access_Control)\n",
        "help_uri": "https://semgrep.dev/r/java.spring.security.audit.spring-csrf-disabled.spring-csrf-disabled"
      },
      "tool": {
        "name": "Semgrep",
        "guid": null,
        "version": "1.36.0"
      },
      "most_recent_instance": {
        "ref": "refs/heads/main",
        "analysis_key": ".github/workflows/GHAS.yml:code-scanning",
        "environment": "{}",
        "category": ".github/workflows/GHAS.yml:code-scanning",
        "state": "open",
        "commit_sha": "326486b80ad625d1aea9c0af815b4d05ade1d6f7",
        "message": {
          "text": "CSRF protection is disabled for this configuration. This is a security risk."
        },
        "location": {
          "path": "storage-service/src/main/java/com/github/advancedsecurity/storageservice/WebSecurityConfig.java",
          "start_line": 46,
          "end_line": 47,
          "start_column": 3,
          "end_column": 22
        },
        "classifications": []
      },
      "instances_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/12/instances",
      "dismissal_approved_by": null
    },
    {
      "number": 11,
      "created_at": "2025-06-15T13:16:16Z",
      "updated_at": "2025-06-15T15:08:54Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/11",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/code-scanning/11",
      "state": "open",
      "fixed_at": null,
      "dismissed_by": null,
      "dismissed_at": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "rule": {
        "id": "go.lang.security.audit.net.use-tls.use-tls",
        "severity": "warning",
        "description": "Semgrep Finding: go.lang.security.audit.net.use-tls.use-tls",
        "name": "go.lang.security.audit.net.use-tls.use-tls",
        "tags": [
          "CWE-319: Cleartext Transmission of Sensitive Information",
          "MEDIUM CONFIDENCE",
          "OWASP-A02:2021 - Cryptographic Failures",
          "OWASP-A03:2017 - Sensitive Data Exposure",
          "security"
        ],
        "full_description": "Found an HTTP server without TLS. Use 'http.ListenAndServeTLS' instead. See https://golang.org/pkg/net/http/#ListenAndServeTLS for more information.",
        "help": "Found an HTTP server without TLS. Use 'http.ListenAndServeTLS' instead. See https://golang.org/pkg/net/http/#ListenAndServeTLS for more information.\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/go.lang.security.audit.net.use-tls.use-tls)\n - [https://golang.org/pkg/net/http/#ListenAndServeTLS](https://golang.org/pkg/net/http/#ListenAndServeTLS)\n",
        "help_uri": "https://semgrep.dev/r/go.lang.security.audit.net.use-tls.use-tls"
      },
      "tool": {
        "name": "Semgrep",
        "guid": null,
        "version": "1.36.0"
      },
      "most_recent_instance": {
        "ref": "refs/heads/main",
        "analysis_key": ".github/workflows/GHAS.yml:code-scanning",
        "environment": "{}",
        "category": ".github/workflows/GHAS.yml:code-scanning",
        "state": "open",
        "commit_sha": "326486b80ad625d1aea9c0af815b4d05ade1d6f7",
        "message": {
          "text": "Found an HTTP server without TLS. Use 'http.ListenAndServeTLS' instead. See https://golang.org/pkg/net/http/#ListenAndServeTLS for more information."
        },
        "location": {
          "path": "gallery-service/main.go",
          "start_line": 710,
          "end_line": 710,
          "start_column": 12,
          "end_column": 45
        },
        "classifications": []
      },
      "instances_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/11/instances",
      "dismissal_approved_by": null
    },
    {
      "number": 10,
      "created_at": "2025-06-15T13:16:16Z",
      "updated_at": "2025-06-15T15:08:54Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/10",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/code-scanning/10",
      "state": "open",
      "fixed_at": null,
      "dismissed_by": null,
      "dismissed_at": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "rule": {
        "id": "generic.secrets.security.detected-jwt-token.detected-jwt-token",
        "severity": "error",
        "description": "Semgrep Finding: generic.secrets.security.detected-jwt-token.detected-jwt-token",
        "name": "generic.secrets.security.detected-jwt-token.detected-jwt-token",
        "tags": [
          "CWE-321: Use of Hard-coded Cryptographic Key",
          "LOW CONFIDENCE",
          "OWASP-A02:2021 - Cryptographic Failures",
          "security"
        ],
        "full_description": "JWT token detected",
        "help": "JWT token detected\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/generic.secrets.security.detected-jwt-token.detected-jwt-token)\n - [https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/](https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/)\n",
        "help_uri": "https://semgrep.dev/r/generic.secrets.security.detected-jwt-token.detected-jwt-token"
      },
      "tool": {
        "name": "Semgrep",
        "guid": null,
        "version": "1.36.0"
      },
      "most_recent_instance": {
        "ref": "refs/heads/main",
        "analysis_key": ".github/workflows/GHAS.yml:code-scanning",
        "environment": "{}",
        "category": ".github/workflows/GHAS.yml:code-scanning",
        "state": "open",
        "commit_sha": "326486b80ad625d1aea9c0af815b4d05ade1d6f7",
        "message": {
          "text": "JWT token detected"
        },
        "location": {
          "path": "gallery-service/gallery-service.postman_collection.json",
          "start_line": 232,
          "end_line": 232,
          "start_column": 14,
          "end_column": 220
        },
        "classifications": []
      },
      "instances_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/10/instances",
      "dismissal_approved_by": null
    },
    {
      "number": 9,
      "created_at": "2025-06-15T13:16:16Z",
      "updated_at": "2025-06-15T15:08:54Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/9",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/code-scanning/9",
      "state": "open",
      "fixed_at": null,
      "dismissed_by": null,
      "dismissed_at": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "rule": {
        "id": "javascript.vue.security.audit.xss.templates.avoid-v-html.avoid-v-html",
        "severity": "warning",
        "description": "Semgrep Finding: javascript.vue.security.audit.xss.templates.avoid-v-html.avoid-v-html",
        "name": "javascript.vue.security.audit.xss.templates.avoid-v-html.avoid-v-html",
        "tags": [
          "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
          "LOW CONFIDENCE",
          "OWASP-A03:2021 - Injection",
          "OWASP-A07:2017 - Cross-Site Scripting (XSS)",
          "security"
        ],
        "full_description": "Dynamically rendering arbitrary HTML on your website can be very dangerous because it can easily lead to XSS vulnerabilities. Only use HTML interpolation on trusted content and never on user-provided content.",
        "help": "Dynamically rendering arbitrary HTML on your website can be very dangerous because it can easily lead to XSS vulnerabilities. Only use HTML interpolation on trusted content and never on user-provided content.\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/javascript.vue.security.audit.xss.templates.avoid-v-html.avoid-v-html)\n - [https://vuejs.org/v2/guide/syntax.html#Raw-HTML](https://vuejs.org/v2/guide/syntax.html#Raw-HTML)\n",
        "help_uri": "https://semgrep.dev/r/javascript.vue.security.audit.xss.templates.avoid-v-html.avoid-v-html"
      },
      "tool": {
        "name": "Semgrep",
        "guid": null,
        "version": "1.36.0"
      },
      "most_recent_instance": {
        "ref": "refs/heads/main",
        "analysis_key": ".github/workflows/GHAS.yml:code-scanning",
        "environment": "{}",
        "category": ".github/workflows/GHAS.yml:code-scanning",
        "state": "open",
        "commit_sha": "326486b80ad625d1aea9c0af815b4d05ade1d6f7",
        "message": {
          "text": "Dynamically rendering arbitrary HTML on your website can be very dangerous because it can easily lead to XSS vulnerabilities. Only use HTML interpolation on trusted content and never on user-provided content."
        },
        "location": {
          "path": "frontend/src/components/Login.vue",
          "start_line": 5,
          "end_line": 5,
          "start_column": 7,
          "end_column": 17
        },
        "classifications": []
      },
      "instances_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/9/instances",
      "dismissal_approved_by": null
    },
    {
      "number": 8,
      "created_at": "2025-06-15T13:16:16Z",
      "updated_at": "2025-06-15T15:08:54Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/8",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/code-scanning/8",
      "state": "open",
      "fixed_at": null,
      "dismissed_by": null,
      "dismissed_at": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "rule": {
        "id": "python.jwt.security.jwt-hardcode.jwt-python-hardcoded-secret",
        "severity": "error",
        "description": "Semgrep Finding: python.jwt.security.jwt-hardcode.jwt-python-hardcoded-secret",
        "name": "python.jwt.security.jwt-hardcode.jwt-python-hardcoded-secret",
        "tags": [
          "CWE-522: Insufficiently Protected Credentials",
          "HIGH CONFIDENCE",
          "OWASP-A02:2017 - Broken Authentication",
          "OWASP-A04:2021 - Insecure Design",
          "security"
        ],
        "full_description": "Hardcoded JWT secret or private key is used. This is a Insufficiently Protected Credentials weakness: https://cwe.mitre.org/data/definitions/522.html Consider using an appropriate security mechanism to protect the credentials (e.g. keeping secrets in environment variables)",
        "help": "Hardcoded JWT secret or private key is used. This is a Insufficiently Protected Credentials weakness: https://cwe.mitre.org/data/definitions/522.html Consider using an appropriate security mechanism to protect the credentials (e.g. keeping secrets in environment variables)\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.jwt.security.jwt-hardcode.jwt-python-hardcoded-secret)\n - [https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/](https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/)\n",
        "help_uri": "https://semgrep.dev/r/python.jwt.security.jwt-hardcode.jwt-python-hardcoded-secret"
      },
      "tool": {
        "name": "Semgrep",
        "guid": null,
        "version": "1.36.0"
      },
      "most_recent_instance": {
        "ref": "refs/heads/main",
        "analysis_key": ".github/workflows/GHAS.yml:code-scanning",
        "environment": "{}",
        "category": ".github/workflows/GHAS.yml:code-scanning",
        "state": "open",
        "commit_sha": "326486b80ad625d1aea9c0af815b4d05ade1d6f7",
        "message": {
          "text": "Hardcoded JWT secret or private key is used. This is a Insufficiently Protected Credentials weakness: https://cwe.mitre.org/data/definitions/522.html Consider using an appropriate security mechanism to protect the credentials (e.g. keeping secrets in environment variables)"
        },
        "location": {
          "path": "authn-service/authn-service.py",
          "start_line": 75,
          "end_line": 75,
          "start_column": 13,
          "end_column": 88
        },
        "classifications": []
      },
      "instances_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/8/instances",
      "dismissal_approved_by": null
    },
    {
      "number": 7,
      "created_at": "2025-06-15T13:16:16Z",
      "updated_at": "2025-06-15T15:08:54Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/7",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/code-scanning/7",
      "state": "open",
      "fixed_at": null,
      "dismissed_by": null,
      "dismissed_at": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "rule": {
        "id": "generic.secrets.security.detected-generic-secret.detected-generic-secret",
        "severity": "error",
        "description": "Semgrep Finding: generic.secrets.security.detected-generic-secret.detected-generic-secret",
        "name": "generic.secrets.security.detected-generic-secret.detected-generic-secret",
        "tags": [
          "CWE-798: Use of Hard-coded Credentials",
          "LOW CONFIDENCE",
          "OWASP-A07:2021 - Identification and Authentication Failures",
          "security"
        ],
        "full_description": "Generic Secret detected",
        "help": "Generic Secret detected\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/generic.secrets.security.detected-generic-secret.detected-generic-secret)\n - [https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures](https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures)\n",
        "help_uri": "https://semgrep.dev/r/generic.secrets.security.detected-generic-secret.detected-generic-secret"
      },
      "tool": {
        "name": "Semgrep",
        "guid": null,
        "version": "1.36.0"
      },
      "most_recent_instance": {
        "ref": "refs/heads/main",
        "analysis_key": ".github/workflows/GHAS.yml:code-scanning",
        "environment": "{}",
        "category": ".github/workflows/GHAS.yml:code-scanning",
        "state": "open",
        "commit_sha": "326486b80ad625d1aea9c0af815b4d05ade1d6f7",
        "message": {
          "text": "Generic Secret detected"
        },
        "location": {
          "path": "authn-service/.env",
          "start_line": 2,
          "end_line": 2,
          "start_column": 8,
          "end_column": 57
        },
        "classifications": []
      },
      "instances_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/7/instances",
      "dismissal_approved_by": null
    },
    {
      "number": 6,
      "created_at": "2025-06-02T13:16:22Z",
      "updated_at": "2025-06-02T13:16:22Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/6",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/code-scanning/6",
      "state": "open",
      "fixed_at": null,
      "dismissed_by": null,
      "dismissed_at": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "rule": {
        "id": "java/unsafe-deserialization",
        "severity": "error",
        "description": "Deserialization of user-controlled data",
        "name": "java/unsafe-deserialization",
        "tags": [
          "external/cwe/cwe-502",
          "security"
        ],
        "full_description": "Deserializing user-controlled data may allow attackers to execute arbitrary code.",
        "help": "# Deserialization of user-controlled data\nDeserializing untrusted data using any deserialization framework that allows the construction of arbitrary serializable objects is easily exploitable and in many cases allows an attacker to execute arbitrary code. Even before a deserialized object is returned to the caller of a deserialization method a lot of code may have been executed, including static initializers, constructors, and finalizers. Automatic deserialization of fields means that an attacker may craft a nested combination of objects on which the executed initialization code may have unforeseen effects, such as the execution of arbitrary code.\n\nThere are many different serialization frameworks. This query currently supports Kryo, XmlDecoder, XStream, SnakeYaml, JYaml, JsonIO, YAMLBeans, HessianBurlap, Castor, Burlap, Jackson, Jabsorb, Jodd JSON, Flexjson, Gson, JMS, and Java IO serialization through `ObjectInputStream`/`ObjectOutputStream`.\n\n\n## Recommendation\nAvoid deserialization of untrusted data if at all possible. If the architecture permits it then use other formats instead of serialized objects, for example JSON or XML. However, these formats should not be deserialized into complex objects because this provides further opportunities for attack. For example, XML-based deserialization attacks are possible through libraries such as XStream and XmlDecoder.\n\nAlternatively, a tightly controlled whitelist can limit the vulnerability of code, but be aware of the existence of so-called Bypass Gadgets, which can circumvent such protection measures.\n\nRecommendations specific to particular frameworks supported by this query:\n\n**FastJson** - `com.alibaba:fastjson`\n\n* **Secure by Default**: Partially\n* **Recommendation**: Call `com.alibaba.fastjson.parser.ParserConfig#setSafeMode` with the argument `true` before deserializing untrusted data.\n\n\n**FasterXML** - `com.fasterxml.jackson.core:jackson-databind`\n\n* **Secure by Default**: Yes\n* **Recommendation**: Don't call `com.fasterxml.jackson.databind.ObjectMapper#enableDefaultTyping` and don't annotate any object fields with `com.fasterxml.jackson.annotation.JsonTypeInfo` passing either the `CLASS` or `MINIMAL_CLASS` values to the annotation. Read [this guide](https://cowtowncoder.medium.com/jackson-2-10-safe-default-typing-2d018f0ce2ba).\n\n\n**Kryo** - `com.esotericsoftware:kryo` and `com.esotericsoftware:kryo5`\n\n* **Secure by Default**: Yes for `com.esotericsoftware:kryo5` and for `com.esotericsoftware:kryo` &gt;= v5.0.0\n* **Recommendation**: Don't call `com.esotericsoftware.kryo(5).Kryo#setRegistrationRequired` with the argument `false` on any `Kryo` instance that may deserialize untrusted data.\n\n\n**ObjectInputStream** - `Java Standard Library`\n\n* **Secure by Default**: No\n* **Recommendation**: Use a validating input stream, such as `org.apache.commons.io.serialization.ValidatingObjectInputStream`.\n\n\n**SnakeYAML** - `org.yaml:snakeyaml`\n\n* **Secure by Default**: No\n* **Recommendation**: Pass an instance of `org.yaml.snakeyaml.constructor.SafeConstructor` to `org.yaml.snakeyaml.Yaml`'s constructor before using it to deserialize untrusted data.\n\n\n**XML Decoder** - `Standard Java Library`\n\n* **Secure by Default**: No\n* **Recommendation**: Do not use with untrusted user input.\n\n\n**ObjectMesssage** - `Java EE/Jakarta EE`\n\n* **Secure by Default**: Depends on the JMS implementation.\n* **Recommendation**: Do not use with untrusted user input.\n\n\n\n## Example\nThe following example calls `readObject` directly on an `ObjectInputStream` that is constructed from untrusted data, and is therefore inherently unsafe.\n\n\n```java\npublic MyObject {\n  public int field;\n  MyObject(int field) {\n    this.field = field;\n  }\n}\n\npublic MyObject deserialize(Socket sock) {\n  try(ObjectInputStream in = new ObjectInputStream(sock.getInputStream())) {\n    return (MyObject)in.readObject(); // BAD: in is from untrusted source\n  }\n}\n\n```\nRewriting the communication protocol to only rely on reading primitive types from the input stream removes the vulnerability.\n\n\n```java\npublic MyObject deserialize(Socket sock) {\n  try(DataInputStream in = new DataInputStream(sock.getInputStream())) {\n    return new MyObject(in.readInt()); // GOOD: read only an int\n  }\n}\n\n```\n\n## References\n* OWASP vulnerability description: [Deserialization of untrusted data](https://www.owasp.org/index.php/Deserialization_of_untrusted_data).\n* OWASP guidance on deserializing objects: [Deserialization Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Deserialization_Cheat_Sheet.html).\n* Talks by Chris Frohoff &amp; Gabriel Lawrence: [ AppSecCali 2015: Marshalling Pickles - how deserializing objects will ruin your day](http://frohoff.github.io/appseccali-marshalling-pickles/), [OWASP SD: Deserialize My Shorts: Or How I Learned to Start Worrying and Hate Java Object Deserialization](http://frohoff.github.io/owaspsd-deserialize-my-shorts/).\n* Alvaro Muñoz &amp; Christian Schneider, RSAConference 2016: [Serial Killer: Silently Pwning Your Java Endpoints](https://speakerdeck.com/pwntester/serial-killer-silently-pwning-your-java-endpoints).\n* SnakeYaml documentation on deserialization: [SnakeYaml deserialization](https://bitbucket.org/snakeyaml/snakeyaml/wiki/Documentation#markdown-header-loading-yaml).\n* Hessian deserialization and related gadget chains: [Hessian deserialization](https://paper.seebug.org/1137/).\n* Castor and Hessian java deserialization vulnerabilities: [Castor and Hessian deserialization](https://securitylab.github.com/research/hessian-java-deserialization-castor-vulnerabilities/).\n* Remote code execution in JYaml library: [JYaml deserialization](https://www.cybersecurity-help.cz/vdb/SB2020022512).\n* JsonIO deserialization vulnerabilities: [JsonIO deserialization](https://klezvirus.github.io/Advanced-Web-Hacking/Serialisation/).\n* Research by Moritz Bechler: [Java Unmarshaller Security - Turning your data into code execution](https://www.github.com/mbechler/marshalsec/blob/master/marshalsec.pdf?raw=true)\n* Blog posts by the developer of Jackson libraries: [On Jackson CVEs: Don’t Panic — Here is what you need to know](https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062) [Jackson 2.10: Safe Default Typing](https://cowtowncoder.medium.com/jackson-2-10-safe-default-typing-2d018f0ce2ba)\n* Jabsorb documentation on deserialization: [Jabsorb JSON Serializer](https://github.com/Servoy/jabsorb/blob/master/src/org/jabsorb/).\n* Jodd JSON documentation on deserialization: [JoddJson Parser](https://json.jodd.org/parser).\n* RCE in Flexjson: [Flexjson deserialization](https://codewhitesec.blogspot.com/2020/03/liferay-portal-json-vulns.html).\n* Android Intent deserialization vulnerabilities with GSON parser: [Insecure use of JSON parsers](https://blog.oversecured.com/Exploiting-memory-corruption-vulnerabilities-on-Android/#insecure-use-of-json-parsers).\n* Research by Matthias Kaiser: [Pwning Your Java Messaging With Deserialization Vulnerabilities](https://www.blackhat.com/docs/us-16/materials/us-16-Kaiser-Pwning-Your-Java-Messaging-With-Deserialization-Vulnerabilities.pdf).\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html).\n",
        "security_severity_level": "critical"
      },
      "tool": {
        "name": "CodeQL",
        "guid": null,
        "version": "2.22.0"
      },
      "most_recent_instance": {
        "ref": "refs/heads/main",
        "analysis_key": ".github/workflows/codeql.yml:analyze",
        "environment": "{\"build-mode\":\"none\",\"language\":\"java-kotlin\"}",
        "category": "/language:java-kotlin",
        "state": "open",
        "commit_sha": "dff43583ad4b8adce8638faa217229218a41a569",
        "message": {
          "text": "Unsafe deserialization depends on a user-provided value.\nUnsafe deserialization depends on a user-provided value."
        },
        "location": {
          "path": "storage-service/src/main/java/com/github/advancedsecurity/storageservice/controllers/BlobController.java",
          "start_line": 45,
          "end_line": 45,
          "start_column": 24,
          "end_column": 39
        },
        "classifications": []
      },
      "instances_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/6/instances",
      "dismissal_approved_by": null
    },
    {
      "number": 5,
      "created_at": "2025-06-02T13:16:22Z",
      "updated_at": "2025-06-02T13:16:22Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/5",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/code-scanning/5",
      "state": "open",
      "fixed_at": null,
      "dismissed_by": null,
      "dismissed_at": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "rule": {
        "id": "java/spring-disabled-csrf-protection",
        "severity": "error",
        "description": "Disabled Spring CSRF protection",
        "name": "java/spring-disabled-csrf-protection",
        "tags": [
          "external/cwe/cwe-352",
          "security"
        ],
        "full_description": "Disabling CSRF protection makes the application vulnerable to a Cross-Site Request Forgery (CSRF) attack.",
        "help": "# Disabled Spring CSRF protection\nCross-site request forgery (CSRF) is a type of vulnerability in which an attacker is able to force a user to carry out an action that the user did not intend.\n\nThe attacker tricks an authenticated user into submitting a request to the web application. Typically, this request will result in a state change on the server, such as changing the user's password. The request can be initiated when the user visits a site controlled by the attacker. If the web application relies only on cookies for authentication, or on other credentials that are automatically included in the request, then this request will appear as legitimate to the server.\n\n\n## Recommendation\nWhen you use Spring, Cross-Site Request Forgery (CSRF) protection is enabled by default. Spring's recommendation is to use CSRF protection for any request that could be processed by a browser client by normal users.\n\n\n## Example\nThe following example shows the Spring Java configuration with CSRF protection disabled. This type of configuration should only be used if you are creating a service that is used only by non-browser clients.\n\n\n```java\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n\n@EnableWebSecurity\n@Configuration\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n  @Override\n  protected void configure(HttpSecurity http) throws Exception {\n    http\n      .csrf(csrf ->\n        // BAD - CSRF protection shouldn't be disabled\n        csrf.disable() \n      );\n  }\n}\n\n```\n\n## References\n* OWASP: [Cross Site Request Forgery (CSRF)](https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)).\n* Spring Security Reference: [ Cross Site Request Forgery (CSRF) ](https://docs.spring.io/spring-security/reference/servlet/exploits/csrf.html).\n* Common Weakness Enumeration: [CWE-352](https://cwe.mitre.org/data/definitions/352.html).\n",
        "security_severity_level": "high"
      },
      "tool": {
        "name": "CodeQL",
        "guid": null,
        "version": "2.22.0"
      },
      "most_recent_instance": {
        "ref": "refs/heads/main",
        "analysis_key": ".github/workflows/codeql.yml:analyze",
        "environment": "{\"build-mode\":\"none\",\"language\":\"java-kotlin\"}",
        "category": "/language:java-kotlin",
        "state": "open",
        "commit_sha": "dff43583ad4b8adce8638faa217229218a41a569",
        "message": {
          "text": "CSRF vulnerability due to protection being disabled."
        },
        "location": {
          "path": "storage-service/src/main/java/com/github/advancedsecurity/storageservice/WebSecurityConfig.java",
          "start_line": 46,
          "end_line": 47,
          "start_column": 3,
          "end_column": 22
        },
        "classifications": []
      },
      "instances_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/5/instances",
      "dismissal_approved_by": null
    },
    {
      "number": 4,
      "created_at": "2025-06-02T13:16:08Z",
      "updated_at": "2025-06-02T13:16:08Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/4",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/code-scanning/4",
      "state": "open",
      "fixed_at": null,
      "dismissed_by": null,
      "dismissed_at": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "rule": {
        "id": "go/clear-text-logging",
        "severity": "error",
        "description": "Clear-text logging of sensitive information",
        "name": "go/clear-text-logging",
        "tags": [
          "external/cwe/cwe-312",
          "external/cwe/cwe-315",
          "external/cwe/cwe-359",
          "security"
        ],
        "full_description": "Logging sensitive information without encryption or hashing can expose it to an attacker.",
        "help": "# Clear-text logging of sensitive information\nSensitive information that is logged unencrypted is accessible to an attacker who gains access to the logs.\n\n\n## Recommendation\nEnsure that sensitive information is always encrypted or obfuscated before being logged.\n\nIn general, decrypt sensitive information only at the point where it is necessary for it to be used in cleartext.\n\nBe aware that external processes often store the standard out and standard error streams of the application, causing logged sensitive information to be stored.\n\n\n## Example\nThe following example code logs user credentials (in this case, their password) in plain text:\n\n\n```go\npackage main\n\nimport (\n\t\"log\"\n\t\"net/http\"\n)\n\nfunc serve() {\n\thttp.HandleFunc(\"/register\", func(w http.ResponseWriter, r *http.Request) {\n\t\tr.ParseForm()\n\t\tuser := r.Form.Get(\"user\")\n\t\tpw := r.Form.Get(\"password\")\n\n\t\tlog.Printf(\"Registering new user %s with password %s.\\n\", user, pw)\n\t})\n\thttp.ListenAndServe(\":80\", nil)\n}\n\n```\nInstead, the credentials should be encrypted, obfuscated, or omitted entirely:\n\n\n```go\npackage main\n\nimport (\n\t\"log\"\n\t\"net/http\"\n)\n\nfunc serve1() {\n\thttp.HandleFunc(\"/register\", func(w http.ResponseWriter, r *http.Request) {\n\t\tr.ParseForm()\n\t\tuser := r.Form.Get(\"user\")\n\t\tpw := r.Form.Get(\"password\")\n\n\t\tlog.Printf(\"Registering new user %s.\\n\", user)\n\n\t\t// ...\n\t\tuse(pw)\n\t})\n\thttp.ListenAndServe(\":80\", nil)\n}\n\n```\n\n## References\n* M. Dowd, J. McDonald and J. Schuhm, *The Art of Software Security Assessment*, 1st Edition, Chapter 2 - 'Common Vulnerabilities of Encryption', p. 43. Addison Wesley, 2006.\n* M. Howard and D. LeBlanc, *Writing Secure Code*, 2nd Edition, Chapter 9 - 'Protecting Secret Data', p. 299. Microsoft, 2002.\n* OWASP: [Password Plaintext Storage](https://www.owasp.org/index.php/Password_Plaintext_Storage).\n* Common Weakness Enumeration: [CWE-312](https://cwe.mitre.org/data/definitions/312.html).\n* Common Weakness Enumeration: [CWE-315](https://cwe.mitre.org/data/definitions/315.html).\n* Common Weakness Enumeration: [CWE-359](https://cwe.mitre.org/data/definitions/359.html).\n",
        "security_severity_level": "high"
      },
      "tool": {
        "name": "CodeQL",
        "guid": null,
        "version": "2.22.0"
      },
      "most_recent_instance": {
        "ref": "refs/heads/main",
        "analysis_key": ".github/workflows/codeql.yml:analyze",
        "environment": "{\"build-mode\":\"autobuild\",\"language\":\"go\"}",
        "category": "/language:go",
        "state": "open",
        "commit_sha": "dff43583ad4b8adce8638faa217229218a41a569",
        "message": {
          "text": "Sensitive data returned by HTTP request headers flows to a logging call."
        },
        "location": {
          "path": "gallery-service/main.go",
          "start_line": 663,
          "end_line": 663,
          "start_column": 50,
          "end_column": 55
        },
        "classifications": []
      },
      "instances_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/4/instances",
      "dismissal_approved_by": null
    },
    {
      "number": 3,
      "created_at": "2025-06-02T13:16:08Z",
      "updated_at": "2025-06-02T13:16:08Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/3",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/code-scanning/3",
      "state": "open",
      "fixed_at": null,
      "dismissed_by": null,
      "dismissed_at": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "rule": {
        "id": "go/clear-text-logging",
        "severity": "error",
        "description": "Clear-text logging of sensitive information",
        "name": "go/clear-text-logging",
        "tags": [
          "external/cwe/cwe-312",
          "external/cwe/cwe-315",
          "external/cwe/cwe-359",
          "security"
        ],
        "full_description": "Logging sensitive information without encryption or hashing can expose it to an attacker.",
        "help": "# Clear-text logging of sensitive information\nSensitive information that is logged unencrypted is accessible to an attacker who gains access to the logs.\n\n\n## Recommendation\nEnsure that sensitive information is always encrypted or obfuscated before being logged.\n\nIn general, decrypt sensitive information only at the point where it is necessary for it to be used in cleartext.\n\nBe aware that external processes often store the standard out and standard error streams of the application, causing logged sensitive information to be stored.\n\n\n## Example\nThe following example code logs user credentials (in this case, their password) in plain text:\n\n\n```go\npackage main\n\nimport (\n\t\"log\"\n\t\"net/http\"\n)\n\nfunc serve() {\n\thttp.HandleFunc(\"/register\", func(w http.ResponseWriter, r *http.Request) {\n\t\tr.ParseForm()\n\t\tuser := r.Form.Get(\"user\")\n\t\tpw := r.Form.Get(\"password\")\n\n\t\tlog.Printf(\"Registering new user %s with password %s.\\n\", user, pw)\n\t})\n\thttp.ListenAndServe(\":80\", nil)\n}\n\n```\nInstead, the credentials should be encrypted, obfuscated, or omitted entirely:\n\n\n```go\npackage main\n\nimport (\n\t\"log\"\n\t\"net/http\"\n)\n\nfunc serve1() {\n\thttp.HandleFunc(\"/register\", func(w http.ResponseWriter, r *http.Request) {\n\t\tr.ParseForm()\n\t\tuser := r.Form.Get(\"user\")\n\t\tpw := r.Form.Get(\"password\")\n\n\t\tlog.Printf(\"Registering new user %s.\\n\", user)\n\n\t\t// ...\n\t\tuse(pw)\n\t})\n\thttp.ListenAndServe(\":80\", nil)\n}\n\n```\n\n## References\n* M. Dowd, J. McDonald and J. Schuhm, *The Art of Software Security Assessment*, 1st Edition, Chapter 2 - 'Common Vulnerabilities of Encryption', p. 43. Addison Wesley, 2006.\n* M. Howard and D. LeBlanc, *Writing Secure Code*, 2nd Edition, Chapter 9 - 'Protecting Secret Data', p. 299. Microsoft, 2002.\n* OWASP: [Password Plaintext Storage](https://www.owasp.org/index.php/Password_Plaintext_Storage).\n* Common Weakness Enumeration: [CWE-312](https://cwe.mitre.org/data/definitions/312.html).\n* Common Weakness Enumeration: [CWE-315](https://cwe.mitre.org/data/definitions/315.html).\n* Common Weakness Enumeration: [CWE-359](https://cwe.mitre.org/data/definitions/359.html).\n",
        "security_severity_level": "high"
      },
      "tool": {
        "name": "CodeQL",
        "guid": null,
        "version": "2.22.0"
      },
      "most_recent_instance": {
        "ref": "refs/heads/main",
        "analysis_key": ".github/workflows/codeql.yml:analyze",
        "environment": "{\"build-mode\":\"autobuild\",\"language\":\"go\"}",
        "category": "/language:go",
        "state": "open",
        "commit_sha": "dff43583ad4b8adce8638faa217229218a41a569",
        "message": {
          "text": "Sensitive data returned by HTTP request headers flows to a logging call."
        },
        "location": {
          "path": "gallery-service/main.go",
          "start_line": 644,
          "end_line": 644,
          "start_column": 50,
          "end_column": 61
        },
        "classifications": []
      },
      "instances_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/3/instances",
      "dismissal_approved_by": null
    },
    {
      "number": 2,
      "created_at": "2025-06-02T13:16:08Z",
      "updated_at": "2025-06-02T13:16:08Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/2",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/code-scanning/2",
      "state": "open",
      "fixed_at": null,
      "dismissed_by": null,
      "dismissed_at": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "rule": {
        "id": "go/sql-injection",
        "severity": "error",
        "description": "Database query built from user-controlled sources",
        "name": "go/sql-injection",
        "tags": [
          "external/cwe/cwe-089",
          "security"
        ],
        "full_description": "Building a database query from user-controlled sources is vulnerable to insertion of malicious code by the user.",
        "help": "# Database query built from user-controlled sources\nIf a database query (such as an SQL or NoSQL query) is built from user-provided data without sufficient sanitization, a malicious user may be able to run commands that exfiltrate, tamper with, or destroy data stored in the database.\n\n\n## Recommendation\nMost database connector libraries offer a way of safely embedding untrusted data into a query by means of query parameters or prepared statements. Use these features rather than building queries by string concatenation.\n\n\n## Example\nIn the following example, assume the function `handler` is an HTTP request handler in a web application, whose parameter `req` contains the request object:\n\n\n```go\npackage main\n\nimport (\n\t\"database/sql\"\n\t\"fmt\"\n\t\"net/http\"\n)\n\nfunc handler(db *sql.DB, req *http.Request) {\n\tq := fmt.Sprintf(\"SELECT ITEM,PRICE FROM PRODUCT WHERE ITEM_CATEGORY='%s' ORDER BY PRICE\",\n\t\treq.URL.Query()[\"category\"])\n\tdb.Query(q)\n}\n\n```\nThe handler constructs an SQL query involving user input taken from the request object unsafely using `fmt.Sprintf` to embed a request parameter directly into the query string `q`. The parameter may include quote characters, allowing a malicious user to terminate the string literal into which the parameter is embedded and add arbitrary SQL code after it.\n\nInstead, the untrusted query parameter should be safely embedded using placeholder parameters:\n\n\n```go\npackage main\n\nimport (\n\t\"database/sql\"\n\t\"net/http\"\n)\n\nfunc handlerGood(db *sql.DB, req *http.Request) {\n\tq := \"SELECT ITEM,PRICE FROM PRODUCT WHERE ITEM_CATEGORY='?' ORDER BY PRICE\"\n\tdb.Query(q, req.URL.Query()[\"category\"])\n}\n\n```\n\n## References\n* Wikipedia: [SQL injection](https://en.wikipedia.org/wiki/SQL_injection).\n* Common Weakness Enumeration: [CWE-89](https://cwe.mitre.org/data/definitions/89.html).\n",
        "security_severity_level": "high"
      },
      "tool": {
        "name": "CodeQL",
        "guid": null,
        "version": "2.22.0"
      },
      "most_recent_instance": {
        "ref": "refs/heads/main",
        "analysis_key": ".github/workflows/codeql.yml:analyze",
        "environment": "{\"build-mode\":\"autobuild\",\"language\":\"go\"}",
        "category": "/language:go",
        "state": "open",
        "commit_sha": "dff43583ad4b8adce8638faa217229218a41a569",
        "message": {
          "text": "This query depends on a user-provided value.\nThis query depends on a user-provided value."
        },
        "location": {
          "path": "gallery-service/main.go",
          "start_line": 200,
          "end_line": 200,
          "start_column": 26,
          "end_column": 168
        },
        "classifications": []
      },
      "instances_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/2/instances",
      "dismissal_approved_by": null
    },
    {
      "number": 1,
      "created_at": "2025-06-02T13:15:46Z",
      "updated_at": "2025-06-15T16:09:02Z",
      "url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/1",
      "html_url": "https://github.com/Champmsecurity/ghas-demo-1/security/code-scanning/1",
      "state": "open",
      "fixed_at": null,
      "dismissed_by": null,
      "dismissed_at": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "rule": {
        "id": "js/xss",
        "severity": "error",
        "description": "Client-side cross-site scripting",
        "name": "js/xss",
        "tags": [
          "external/cwe/cwe-079",
          "external/cwe/cwe-116",
          "security"
        ],
        "full_description": "Writing user input directly to the DOM allows for a cross-site scripting vulnerability.",
        "help": "# Client-side cross-site scripting\nDirectly writing user input (for example, a URL query parameter) to a webpage without properly sanitizing the input first, allows for a cross-site scripting vulnerability.\n\nThis kind of vulnerability is also called *DOM-based* cross-site scripting, to distinguish it from other types of cross-site scripting.\n\n\n## Recommendation\nTo guard against cross-site scripting, consider using contextual output encoding/escaping before writing user input to the page, or one of the other solutions that are mentioned in the references.\n\n\n## Example\nThe following example shows part of the page URL being written directly to the document, leaving the website vulnerable to cross-site scripting.\n\n\n```javascript\nfunction setLanguageOptions() {\n    var href = document.location.href,\n        deflt = href.substring(href.indexOf(\"default=\")+8);\n    document.write(\"<OPTION value=1>\"+deflt+\"</OPTION>\");\n    document.write(\"<OPTION value=2>English</OPTION>\");\n}\n\n```\n\n## References\n* OWASP: [DOM based XSS Prevention Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/DOM_based_XSS_Prevention_Cheat_Sheet.html).\n* OWASP: [XSS (Cross Site Scripting) Prevention Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html).\n* OWASP [DOM Based XSS](https://www.owasp.org/index.php/DOM_Based_XSS).\n* OWASP [Types of Cross-Site Scripting](https://www.owasp.org/index.php/Types_of_Cross-Site_Scripting).\n* Wikipedia: [Cross-site scripting](http://en.wikipedia.org/wiki/Cross-site_scripting).\n* Common Weakness Enumeration: [CWE-79](https://cwe.mitre.org/data/definitions/79.html).\n* Common Weakness Enumeration: [CWE-116](https://cwe.mitre.org/data/definitions/116.html).\n",
        "security_severity_level": "high"
      },
      "tool": {
        "name": "CodeQL",
        "guid": null,
        "version": "2.22.0"
      },
      "most_recent_instance": {
        "ref": "refs/heads/main",
        "analysis_key": ".github/workflows/GHAS.yml:code-scanning",
        "environment": "{}",
        "category": ".github/workflows/GHAS.yml:code-scanning",
        "state": "open",
        "commit_sha": "326486b80ad625d1aea9c0af815b4d05ade1d6f7",
        "message": {
          "text": "Cross-site scripting vulnerability due to user-provided value."
        },
        "location": {
          "path": "frontend/src/components/Login.vue",
          "start_line": 5,
          "end_line": 5,
          "start_column": 10,
          "end_column": 24
        },
        "classifications": []
      },
      "instances_url": "https://api.github.com/repos/Champmsecurity/ghas-demo-1/code-scanning/alerts/1/instances",
      "dismissal_approved_by": null
    }
  ],
  "secret_scanning": [
    {
      "number": 10,
      "created_at": "2025-06-17T10:01:45Z",
      "updated_at": "2025-06-17T10:01:45Z",
      "url": "https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/secret-scanning/alerts/10",
      "html_url": "https://github.com/Champmsecurity/juice-shop_Ghas/security/secret-scanning/10",
      "locations_url": "https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/secret-scanning/alerts/10/locations",
      "state": "open",
      "secret_type": "github_personal_access_token",
      "secret_type_display_name": "GitHub Personal Access Token",
      "validity": "unknown",
      "multi_repo": true,
      "is_base64_encoded": false,
      "secret": "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",
      "first_location_detected": {
        "path": "README.md",
        "start_line": 41,
        "end_line": 41,
        "start_column": 1,
        "end_column": 41,
        "blob_sha": "3ec90d253eb8440e12ed45d005deb90007322ae6",
        "blob_url": "https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/git/blobs/3ec90d253eb8440e12ed45d005deb90007322ae6",
        "commit_sha": "0284f31dbc6c75dac9becce4f1f9dde8f77ab1fc",
        "commit_url": "https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/git/commits/0284f31dbc6c75dac9becce4f1f9dde8f77ab1fc"
      },
      "has_more_locations": true,
      "publicly_leaked": true,
      "resolution": null,
      "resolved_by": null,
      "resolved_at": null,
      "resolution_comment": null,
      "push_protection_bypassed": true,
      "push_protection_bypassed_by": {
        "login": "Sec-champ",
        "id": 203533934,
        "node_id": "U_kgDODCGubg",
        "avatar_url": "https://avatars.githubusercontent.com/u/203533934?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sec-champ",
        "html_url": "https://github.com/Sec-champ",
        "followers_url": "https://api.github.com/users/Sec-champ/followers",
        "following_url": "https://api.github.com/users/Sec-champ/following{/other_user}",
        "gists_url": "https://api.github.com/users/Sec-champ/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Sec-champ/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Sec-champ/subscriptions",
        "organizations_url": "https://api.github.com/users/Sec-champ/orgs",
        "repos_url": "https://api.github.com/users/Sec-champ/repos",
        "events_url": "https://api.github.com/users/Sec-champ/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Sec-champ/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "push_protection_bypassed_at": "2025-06-17T10:01:26Z",
      "push_protection_bypass_request_reviewer": null,
      "push_protection_bypass_request_reviewer_comment": null,
      "push_protection_bypass_request_comment": null,
      "push_protection_bypass_request_html_url": null
    },
    {
      "number": 9,
      "created_at": "2025-06-17T10:01:45Z",
      "updated_at": "2025-06-17T10:01:45Z",
      "url": "https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/secret-scanning/alerts/9",
      "html_url": "https://github.com/Champmsecurity/juice-shop_Ghas/security/secret-scanning/9",
      "locations_url": "https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/secret-scanning/alerts/9/locations",
      "state": "open",
      "secret_type": "google_api_key",
      "secret_type_display_name": "Google API Key",
      "validity": "unknown",
      "multi_repo": true,
      "is_base64_encoded": false,
      "secret": "AIzaSyDaGmWKa4JsXZ-HjGw7ISLn_3namBGewQe",
      "first_location_detected": {
        "path": "README.md",
        "start_line": 39,
        "end_line": 39,
        "start_column": 9,
        "end_column": 48,
        "blob_sha": "3ec90d253eb8440e12ed45d005deb90007322ae6",
        "blob_url": "https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/git/blobs/3ec90d253eb8440e12ed45d005deb90007322ae6",
        "commit_sha": "0284f31dbc6c75dac9becce4f1f9dde8f77ab1fc",
        "commit_url": "https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/git/commits/0284f31dbc6c75dac9becce4f1f9dde8f77ab1fc"
      },
      "has_more_locations": true,
      "publicly_leaked": true,
      "resolution": null,
      "resolved_by": null,
      "resolved_at": null,
      "resolution_comment": null,
      "push_protection_bypassed": false,
      "push_protection_bypassed_by": null,
      "push_protection_bypassed_at": null,
      "push_protection_bypass_request_reviewer": null,
      "push_protection_bypass_request_reviewer_comment": null,
      "push_protection_bypass_request_comment": null,
      "push_protection_bypass_request_html_url": null
    }
  ],
  "dependabot": [
    {
      "number": 16,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "multer"
        },
        "manifest_path": "package.json",
        "scope": "runtime",
        "relationship": "direct"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-g5hg-p3ph-g8qg",
        "cve_id": "CVE-2025-48997",
        "summary": "Multer vulnerable to Denial of Service via unhandled exception",
        "description": "### Impact\n\nA vulnerability in Multer versions >=1.4.4-lts.1, <2.0.1 allows an attacker to trigger a Denial of Service (DoS) by sending an upload file request with an empty string field name. This request causes an unhandled exception, leading to a crash of the process.\n\n### Patches\n\nUsers should upgrade to `2.0.1`\n\n### Workarounds\n\nNone\n\n### References\n\nhttps://github.com/expressjs/multer/commit/35a3272b611945155e046dd5cef11088587635e9\nhttps://github.com/expressjs/multer/issues/1233\nhttps://github.com/expressjs/multer/pull/1256",
        "severity": "high",
        "identifiers": [
          {
            "value": "GHSA-g5hg-p3ph-g8qg",
            "type": "GHSA"
          },
          {
            "value": "CVE-2025-48997",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://github.com/expressjs/multer/security/advisories/GHSA-g5hg-p3ph-g8qg"
          },
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-48997"
          },
          {
            "url": "https://github.com/expressjs/multer/issues/1233"
          },
          {
            "url": "https://github.com/expressjs/multer/pull/1256"
          },
          {
            "url": "https://github.com/expressjs/multer/commit/35a3272b611945155e046dd5cef11088587635e9"
          },
          {
            "url": "https://github.com/advisories/GHSA-g5hg-p3ph-g8qg"
          }
        ],
        "published_at": "2025-06-05T01:09:35Z",
        "updated_at": "2025-06-05T01:09:36Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "multer"
            },
            "severity": "high",
            "vulnerable_version_range": ">= 1.4.4-lts.1, < 2.0.1",
            "first_patched_version": {
              "identifier": "2.0.1"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": null,
            "score": 0.0
          },
          "cvss_v4": {
            "vector_string": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N",
            "score": 8.7
          }
        },
        "epss": {
          "percentage": 0.00055,
          "percentile": 0.17446
        },
        "cvss": {
          "vector_string": null,
          "score": 0.0
        },
        "cwes": [
          {
            "cwe_id": "CWE-248",
            "name": "Uncaught Exception"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "multer"
        },
        "severity": "high",
        "vulnerable_version_range": ">= 1.4.4-lts.1, < 2.0.1",
        "first_patched_version": {
          "identifier": "2.0.1"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/dependabot/alerts/16",
      "html_url": "https://github.com/Champmsecurity/juice-shop_Ghas/security/dependabot/16",
      "created_at": "2025-06-17T09:20:50Z",
      "updated_at": "2025-06-17T09:20:50Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 15,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "multer"
        },
        "manifest_path": "package.json",
        "scope": "runtime",
        "relationship": "direct"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-4pg4-qvpc-4q3h",
        "cve_id": "CVE-2025-47944",
        "summary": "Multer vulnerable to Denial of Service from maliciously crafted requests",
        "description": "### Impact\nA vulnerability in Multer versions >=1.4.4-lts.1 allows an attacker to trigger a Denial of Service (DoS) by sending a malformed multi-part upload request. This request causes an unhandled exception, leading to a crash of the process.\n\n### Patches\nUsers should upgrade to `2.0.0`\n\n### Workarounds\nNone\n\n### References\n\n- https://github.com/expressjs/multer/issues/1176\n- https://github.com/expressjs/multer/commit/2c8505f207d923dd8de13a9f93a4563e59933665",
        "severity": "high",
        "identifiers": [
          {
            "value": "GHSA-4pg4-qvpc-4q3h",
            "type": "GHSA"
          },
          {
            "value": "CVE-2025-47944",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://github.com/expressjs/multer/security/advisories/GHSA-4pg4-qvpc-4q3h"
          },
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-47944"
          },
          {
            "url": "https://github.com/expressjs/multer/issues/1176"
          },
          {
            "url": "https://github.com/expressjs/multer/commit/2c8505f207d923dd8de13a9f93a4563e59933665"
          },
          {
            "url": "https://github.com/advisories/GHSA-4pg4-qvpc-4q3h"
          }
        ],
        "published_at": "2025-05-19T22:16:30Z",
        "updated_at": "2025-05-21T20:37:35Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "multer"
            },
            "severity": "high",
            "vulnerable_version_range": ">= 1.4.4-lts.1, < 2.0.0",
            "first_patched_version": {
              "identifier": "2.0.0"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "score": 7.5
          },
          "cvss_v4": {
            "vector_string": null,
            "score": 0.0
          }
        },
        "epss": {
          "percentage": 0.00049,
          "percentile": 0.15354
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "score": 7.5
        },
        "cwes": [
          {
            "cwe_id": "CWE-248",
            "name": "Uncaught Exception"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "multer"
        },
        "severity": "high",
        "vulnerable_version_range": ">= 1.4.4-lts.1, < 2.0.0",
        "first_patched_version": {
          "identifier": "2.0.0"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/dependabot/alerts/15",
      "html_url": "https://github.com/Champmsecurity/juice-shop_Ghas/security/dependabot/15",
      "created_at": "2025-06-17T09:20:49Z",
      "updated_at": "2025-06-17T09:20:49Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 14,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "multer"
        },
        "manifest_path": "package.json",
        "scope": "runtime",
        "relationship": "direct"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-44fp-w29j-9vj5",
        "cve_id": "CVE-2025-47935",
        "summary": "Multer vulnerable to Denial of Service via memory leaks from unclosed streams",
        "description": "### Impact\n\nMulter <2.0.0 is vulnerable to a resource exhaustion and memory leak issue due to improper stream handling. When the HTTP request stream emits an error, the internal `busboy` stream is not closed, violating Node.js stream safety guidance.\n\nThis leads to unclosed streams accumulating over time, consuming memory and file descriptors. Under sustained or repeated failure conditions, this can result in denial of service, requiring manual server restarts to recover. All users of Multer handling file uploads are potentially impacted.\n\n\n### Patches\n\nUsers should upgrade to `2.0.0`\n\n\n### Workarounds\n\nNone\n\n### References\n\n- https://github.com/expressjs/multer/pull/1120\n- https://github.com/expressjs/multer/commit/2c8505f207d923dd8de13a9f93a4563e59933665",
        "severity": "high",
        "identifiers": [
          {
            "value": "GHSA-44fp-w29j-9vj5",
            "type": "GHSA"
          },
          {
            "value": "CVE-2025-47935",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://github.com/expressjs/multer/security/advisories/GHSA-44fp-w29j-9vj5"
          },
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2025-47935"
          },
          {
            "url": "https://github.com/expressjs/multer/pull/1120"
          },
          {
            "url": "https://github.com/expressjs/multer/commit/2c8505f207d923dd8de13a9f93a4563e59933665"
          },
          {
            "url": "https://github.com/advisories/GHSA-44fp-w29j-9vj5"
          }
        ],
        "published_at": "2025-05-19T22:04:17Z",
        "updated_at": "2025-06-08T07:19:19Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "multer"
            },
            "severity": "high",
            "vulnerable_version_range": "< 2.0.0",
            "first_patched_version": {
              "identifier": "2.0.0"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "score": 7.5
          },
          "cvss_v4": {
            "vector_string": null,
            "score": 0.0
          }
        },
        "epss": {
          "percentage": 0.00049,
          "percentile": 0.15354
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "score": 7.5
        },
        "cwes": [
          {
            "cwe_id": "CWE-401",
            "name": "Missing Release of Memory after Effective Lifetime"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "multer"
        },
        "severity": "high",
        "vulnerable_version_range": "< 2.0.0",
        "first_patched_version": {
          "identifier": "2.0.0"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/dependabot/alerts/14",
      "html_url": "https://github.com/Champmsecurity/juice-shop_Ghas/security/dependabot/14",
      "created_at": "2025-06-17T09:20:49Z",
      "updated_at": "2025-06-17T09:20:49Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 13,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "socket.io"
        },
        "manifest_path": "package.json",
        "scope": "runtime",
        "relationship": "direct"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-25hc-qcg6-38wj",
        "cve_id": "CVE-2024-38355",
        "summary": "socket.io has an unhandled 'error' event",
        "description": "### Impact\n\nA specially crafted Socket.IO packet can trigger an uncaught exception on the Socket.IO server, thus killing the Node.js process.\n\n```\nnode:events:502\n    throw err; // Unhandled 'error' event\n    ^\n\nError [ERR_UNHANDLED_ERROR]: Unhandled error. (undefined)\n    at new NodeError (node:internal/errors:405:5)\n    at Socket.emit (node:events:500:17)\n    at /myapp/node_modules/socket.io/lib/socket.js:531:14\n    at process.processTicksAndRejections (node:internal/process/task_queues:77:11) {\n  code: 'ERR_UNHANDLED_ERROR',\n  context: undefined\n}\n```\n\n### Affected versions\n\n| Version range    | Needs minor update?                            |\n|------------------|------------------------------------------------|\n| `4.6.2...latest` | Nothing to do               |\n| `3.0.0...4.6.1`  | Please upgrade to `socket.io@4.6.2` (at least) |\n| `2.3.0...2.5.0`  | Please upgrade to `socket.io@2.5.1`            |\n\n### Patches\n\nThis issue is fixed by https://github.com/socketio/socket.io/commit/15af22fc22bc6030fcead322c106f07640336115, included in `socket.io@4.6.2` (released in May 2023).\n\nThe fix was backported in the 2.x branch today: https://github.com/socketio/socket.io/commit/d30630ba10562bf987f4d2b42440fc41a828119c\n\n### Workarounds\n\nAs a workaround for the affected versions of the `socket.io` package, you can attach a listener for the \"error\" event:\n\n```js\nio.on(\"connection\", (socket) => {\n  socket.on(\"error\", () => {\n    // ...\n  });\n});\n```\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open a discussion [here](https://github.com/socketio/socket.io/discussions)\n\nThanks a lot to [Paul Taylor](https://github.com/Y0ursTruly) for the responsible disclosure.\n\n### References\n\n- https://github.com/socketio/socket.io/commit/15af22fc22bc6030fcead322c106f07640336115\n- https://github.com/socketio/socket.io/commit/d30630ba10562bf987f4d2b42440fc41a828119c\n",
        "severity": "medium",
        "identifiers": [
          {
            "value": "GHSA-25hc-qcg6-38wj",
            "type": "GHSA"
          },
          {
            "value": "CVE-2024-38355",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://github.com/socketio/socket.io/security/advisories/GHSA-25hc-qcg6-38wj"
          },
          {
            "url": "https://github.com/socketio/socket.io/commit/15af22fc22bc6030fcead322c106f07640336115"
          },
          {
            "url": "https://github.com/socketio/socket.io/commit/d30630ba10562bf987f4d2b42440fc41a828119c"
          },
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-38355"
          },
          {
            "url": "https://github.com/advisories/GHSA-25hc-qcg6-38wj"
          }
        ],
        "published_at": "2024-06-19T15:04:41Z",
        "updated_at": "2024-11-18T16:26:46Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "socket.io"
            },
            "severity": "medium",
            "vulnerable_version_range": "< 2.5.0",
            "first_patched_version": {
              "identifier": "2.5.1"
            }
          },
          {
            "package": {
              "ecosystem": "npm",
              "name": "socket.io"
            },
            "severity": "medium",
            "vulnerable_version_range": ">= 3.0.0, < 4.6.2",
            "first_patched_version": {
              "identifier": "4.6.2"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
            "score": 7.3
          },
          "cvss_v4": {
            "vector_string": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:L/VI:L/VA:L/SC:N/SI:N/SA:N",
            "score": 6.9
          }
        },
        "epss": {
          "percentage": 0.00099,
          "percentile": 0.28684
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "score": 7.3
        },
        "cwes": [
          {
            "cwe_id": "CWE-20",
            "name": "Improper Input Validation"
          },
          {
            "cwe_id": "CWE-754",
            "name": "Improper Check for Unusual or Exceptional Conditions"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "socket.io"
        },
        "severity": "medium",
        "vulnerable_version_range": ">= 3.0.0, < 4.6.2",
        "first_patched_version": {
          "identifier": "4.6.2"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/dependabot/alerts/13",
      "html_url": "https://github.com/Champmsecurity/juice-shop_Ghas/security/dependabot/13",
      "created_at": "2025-06-17T09:20:49Z",
      "updated_at": "2025-06-17T09:20:49Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 12,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "sanitize-html"
        },
        "manifest_path": "package.json",
        "scope": "runtime",
        "relationship": "direct"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-cgfm-xwp7-2cvr",
        "cve_id": "CVE-2022-25887",
        "summary": "Sanitize-html Vulnerable To REDoS Attacks",
        "description": "The package sanitize-html before 2.7.1 are vulnerable to Regular Expression Denial of Service (ReDoS) due to insecure global regular expression replacement logic of HTML comment removal.",
        "severity": "high",
        "identifiers": [
          {
            "value": "GHSA-cgfm-xwp7-2cvr",
            "type": "GHSA"
          },
          {
            "value": "CVE-2022-25887",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-25887"
          },
          {
            "url": "https://github.com/apostrophecms/sanitize-html/pull/557"
          },
          {
            "url": "https://github.com/apostrophecms/sanitize-html/commit/b4682c12fd30e12e82fa2d9b766de91d7d2cd23c"
          },
          {
            "url": "https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-3008102"
          },
          {
            "url": "https://security.snyk.io/vuln/SNYK-JS-SANITIZEHTML-2957526"
          },
          {
            "url": "https://github.com/advisories/GHSA-cgfm-xwp7-2cvr"
          }
        ],
        "published_at": "2022-08-31T00:00:24Z",
        "updated_at": "2024-04-22T23:16:47Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "sanitize-html"
            },
            "severity": "high",
            "vulnerable_version_range": "< 2.7.1",
            "first_patched_version": {
              "identifier": "2.7.1"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
            "score": 7.5
          },
          "cvss_v4": {
            "vector_string": null,
            "score": 0.0
          }
        },
        "epss": {
          "percentage": 0.00048,
          "percentile": 0.14691
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "score": 7.5
        },
        "cwes": [
          {
            "cwe_id": "CWE-1333",
            "name": "Inefficient Regular Expression Complexity"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "sanitize-html"
        },
        "severity": "high",
        "vulnerable_version_range": "< 2.7.1",
        "first_patched_version": {
          "identifier": "2.7.1"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/dependabot/alerts/12",
      "html_url": "https://github.com/Champmsecurity/juice-shop_Ghas/security/dependabot/12",
      "created_at": "2025-06-17T09:20:49Z",
      "updated_at": "2025-06-17T09:20:49Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 11,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "sanitize-html"
        },
        "manifest_path": "package.json",
        "scope": "runtime",
        "relationship": "direct"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-rm97-x556-q36h",
        "cve_id": "CVE-2024-21501",
        "summary": "sanitize-html Information Exposure vulnerability",
        "description": "Versions of the package sanitize-html before 2.12.1 are vulnerable to Information Exposure when used on the backend and with the style attribute allowed, allowing enumeration of files in the system (including project dependencies). An attacker could exploit this vulnerability to gather details about the file system structure and dependencies of the targeted server.",
        "severity": "medium",
        "identifiers": [
          {
            "value": "GHSA-rm97-x556-q36h",
            "type": "GHSA"
          },
          {
            "value": "CVE-2024-21501",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-21501"
          },
          {
            "url": "https://github.com/apostrophecms/sanitize-html/pull/650"
          },
          {
            "url": "https://github.com/apostrophecms/sanitize-html/commit/c5dbdf77fe8b836d3bf4554ea39edb45281ec0b4"
          },
          {
            "url": "https://gist.github.com/Slonser/8b4d061abe6ee1b2e10c7242987674cf"
          },
          {
            "url": "https://github.com/apostrophecms/apostrophe/discussions/4436"
          },
          {
            "url": "https://security.snyk.io/vuln/SNYK-JS-SANITIZEHTML-6256334"
          },
          {
            "url": "https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-6276557"
          },
          {
            "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/4EB5JPYRCTS64EA5AMV3INHDPI6I4AW7"
          },
          {
            "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/P4I5X6V3LYUNBMZ5YOW4BV427TH3IK4S"
          },
          {
            "url": "https://github.com/advisories/GHSA-rm97-x556-q36h"
          }
        ],
        "published_at": "2024-02-24T06:30:17Z",
        "updated_at": "2024-08-28T21:58:19Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "sanitize-html"
            },
            "severity": "medium",
            "vulnerable_version_range": "< 2.12.1",
            "first_patched_version": {
              "identifier": "2.12.1"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
            "score": 5.3
          },
          "cvss_v4": {
            "vector_string": null,
            "score": 0.0
          }
        },
        "epss": {
          "percentage": 0.00991,
          "percentile": 0.75692
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
          "score": 5.3
        },
        "cwes": [
          {
            "cwe_id": "CWE-200",
            "name": "Exposure of Sensitive Information to an Unauthorized Actor"
          },
          {
            "cwe_id": "CWE-538",
            "name": "Insertion of Sensitive Information into Externally-Accessible File or Directory"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "sanitize-html"
        },
        "severity": "medium",
        "vulnerable_version_range": "< 2.12.1",
        "first_patched_version": {
          "identifier": "2.12.1"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/dependabot/alerts/11",
      "html_url": "https://github.com/Champmsecurity/juice-shop_Ghas/security/dependabot/11",
      "created_at": "2025-06-17T09:20:49Z",
      "updated_at": "2025-06-17T09:20:49Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 10,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "jsonwebtoken"
        },
        "manifest_path": "package.json",
        "scope": "runtime",
        "relationship": "direct"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-qwph-4952-7xr6",
        "cve_id": "CVE-2022-23540",
        "summary": "jsonwebtoken vulnerable to signature validation bypass due to insecure default algorithm in jwt.verify()",
        "description": "# Overview\n\nIn versions <=8.5.1 of jsonwebtoken library, lack of algorithm definition and a falsy secret or key in the `jwt.verify()` function can lead to signature validation bypass due to defaulting to the `none` algorithm for signature verification.\n\n# Am I affected?\nYou will be affected if all the following are true in the `jwt.verify()` function:\n- a token with no signature is received\n- no algorithms are specified \n- a falsy (e.g. null, false, undefined) secret or key is passed \n\n# How do I fix it?\n \nUpdate to version 9.0.0 which removes the default support for the none algorithm in the `jwt.verify()` method. \n\n# Will the fix impact my users?\n\nThere will be no impact, if you update to version 9.0.0 and you don’t need to allow for the `none` algorithm. If you need 'none' algorithm, you have to explicitly specify that in `jwt.verify()` options.",
        "severity": "medium",
        "identifiers": [
          {
            "value": "GHSA-qwph-4952-7xr6",
            "type": "GHSA"
          },
          {
            "value": "CVE-2022-23540",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-qwph-4952-7xr6"
          },
          {
            "url": "https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3"
          },
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23540"
          },
          {
            "url": "https://security.netapp.com/advisory/ntap-20240621-0007"
          },
          {
            "url": "https://github.com/advisories/GHSA-qwph-4952-7xr6"
          }
        ],
        "published_at": "2022-12-22T03:32:59Z",
        "updated_at": "2025-02-13T18:33:13Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "jsonwebtoken"
            },
            "severity": "medium",
            "vulnerable_version_range": "< 9.0.0",
            "first_patched_version": {
              "identifier": "9.0.0"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:H/A:L",
            "score": 6.4
          },
          "cvss_v4": {
            "vector_string": null,
            "score": 0.0
          }
        },
        "epss": {
          "percentage": 0.00024,
          "percentile": 0.04833
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:H/A:L",
          "score": 6.4
        },
        "cwes": [
          {
            "cwe_id": "CWE-287",
            "name": "Improper Authentication"
          },
          {
            "cwe_id": "CWE-327",
            "name": "Use of a Broken or Risky Cryptographic Algorithm"
          },
          {
            "cwe_id": "CWE-347",
            "name": "Improper Verification of Cryptographic Signature"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "jsonwebtoken"
        },
        "severity": "medium",
        "vulnerable_version_range": "< 9.0.0",
        "first_patched_version": {
          "identifier": "9.0.0"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/dependabot/alerts/10",
      "html_url": "https://github.com/Champmsecurity/juice-shop_Ghas/security/dependabot/10",
      "created_at": "2025-06-17T09:20:49Z",
      "updated_at": "2025-06-17T09:20:49Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 9,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "jsonwebtoken"
        },
        "manifest_path": "package.json",
        "scope": "runtime",
        "relationship": "direct"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-hjrf-2m68-5959",
        "cve_id": "CVE-2022-23541",
        "summary": "jsonwebtoken's insecure implementation of key retrieval function could lead to Forgeable Public/Private Tokens from RSA to HMAC",
        "description": "# Overview\n\nVersions `<=8.5.1` of `jsonwebtoken` library can be misconfigured so that passing a poorly implemented key retrieval function (referring to the `secretOrPublicKey` argument from the [readme link](https://github.com/auth0/node-jsonwebtoken#jwtverifytoken-secretorpublickey-options-callback)) will result in incorrect verification of tokens. There is a possibility of using a different algorithm and key combination in verification  than the one that was used to sign the tokens. Specifically, tokens signed with an asymmetric public key could be verified with a symmetric HS256 algorithm. This can lead to successful validation of forged tokens. \n\n# Am I affected?\n\nYou will be affected if your application is supporting usage of both symmetric key and asymmetric key in jwt.verify() implementation with the same key retrieval function. \n\n# How do I fix it?\n \nUpdate to version 9.0.0.\n\n# Will the fix impact my users?\n\nThere is no impact for end users",
        "severity": "medium",
        "identifiers": [
          {
            "value": "GHSA-hjrf-2m68-5959",
            "type": "GHSA"
          },
          {
            "value": "CVE-2022-23541",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-hjrf-2m68-5959"
          },
          {
            "url": "https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3"
          },
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23541"
          },
          {
            "url": "https://github.com/auth0/node-jsonwebtoken/releases/tag/v9.0.0"
          },
          {
            "url": "https://security.netapp.com/advisory/ntap-20240621-0007"
          },
          {
            "url": "https://github.com/advisories/GHSA-hjrf-2m68-5959"
          }
        ],
        "published_at": "2022-12-22T03:33:19Z",
        "updated_at": "2024-06-24T21:24:07Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "jsonwebtoken"
            },
            "severity": "medium",
            "vulnerable_version_range": "<= 8.5.1",
            "first_patched_version": {
              "identifier": "9.0.0"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L",
            "score": 5.0
          },
          "cvss_v4": {
            "vector_string": null,
            "score": 0.0
          }
        },
        "epss": {
          "percentage": 0.00049,
          "percentile": 0.15032
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L",
          "score": 5.0
        },
        "cwes": [
          {
            "cwe_id": "CWE-287",
            "name": "Improper Authentication"
          },
          {
            "cwe_id": "CWE-1259",
            "name": "Improper Restriction of Security Token Assignment"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "jsonwebtoken"
        },
        "severity": "medium",
        "vulnerable_version_range": "<= 8.5.1",
        "first_patched_version": {
          "identifier": "9.0.0"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/dependabot/alerts/9",
      "html_url": "https://github.com/Champmsecurity/juice-shop_Ghas/security/dependabot/9",
      "created_at": "2025-06-17T09:20:49Z",
      "updated_at": "2025-06-17T09:20:49Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 8,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "jsonwebtoken"
        },
        "manifest_path": "package.json",
        "scope": "runtime",
        "relationship": "direct"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-8cf7-32gw-wr33",
        "cve_id": "CVE-2022-23539",
        "summary": "jsonwebtoken unrestricted key type could lead to legacy keys usage ",
        "description": "# Overview\n\nVersions `<=8.5.1` of `jsonwebtoken` library could be misconfigured so that legacy, insecure key types are used for signature verification. For example, DSA keys could be used with the RS256 algorithm. \n\n# Am I affected?\n\nYou are affected if you are using an algorithm and a key type other than the combinations mentioned below\n\n| Key type |  algorithm                                    |\n|----------|------------------------------------------|\n| ec           | ES256, ES384, ES512                      |\n| rsa          | RS256, RS384, RS512, PS256, PS384, PS512 |\n| rsa-pss  | PS256, PS384, PS512                      |\n\nAnd for Elliptic Curve algorithms:\n\n| `alg` | Curve      |\n|-------|------------|\n| ES256 | prime256v1 |\n| ES384 | secp384r1  |\n| ES512 | secp521r1  |\n\n# How do I fix it?\n\nUpdate to version 9.0.0. This version validates for asymmetric key type and algorithm combinations. Please refer to the above mentioned algorithm / key type combinations for the valid secure configuration. After updating to version 9.0.0, If you still intend to continue with signing or verifying tokens using invalid key type/algorithm value combinations, you’ll need to set the `allowInvalidAsymmetricKeyTypes` option to `true` in the `sign()` and/or `verify()` functions.\n\n# Will the fix impact my users?\n\nThere will be no impact, if you update to version 9.0.0 and you already use a valid secure combination of key type and algorithm. Otherwise,  use the  `allowInvalidAsymmetricKeyTypes` option  to `true` in the `sign()` and `verify()` functions to continue usage of invalid key type/algorithm combination in 9.0.0 for legacy compatibility. \n\n",
        "severity": "high",
        "identifiers": [
          {
            "value": "GHSA-8cf7-32gw-wr33",
            "type": "GHSA"
          },
          {
            "value": "CVE-2022-23539",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://github.com/auth0/node-jsonwebtoken/security/advisories/GHSA-8cf7-32gw-wr33"
          },
          {
            "url": "https://github.com/auth0/node-jsonwebtoken/commit/e1fa9dcc12054a8681db4e6373da1b30cf7016e3"
          },
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-23539"
          },
          {
            "url": "https://security.netapp.com/advisory/ntap-20240621-0007"
          },
          {
            "url": "https://github.com/advisories/GHSA-8cf7-32gw-wr33"
          }
        ],
        "published_at": "2022-12-22T03:32:22Z",
        "updated_at": "2024-06-24T21:23:39Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "jsonwebtoken"
            },
            "severity": "high",
            "vulnerable_version_range": "<= 8.5.1",
            "first_patched_version": {
              "identifier": "9.0.0"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N",
            "score": 8.1
          },
          "cvss_v4": {
            "vector_string": null,
            "score": 0.0
          }
        },
        "epss": {
          "percentage": 0.00089,
          "percentile": 0.26488
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N",
          "score": 8.1
        },
        "cwes": [
          {
            "cwe_id": "CWE-327",
            "name": "Use of a Broken or Risky Cryptographic Algorithm"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "jsonwebtoken"
        },
        "severity": "high",
        "vulnerable_version_range": "<= 8.5.1",
        "first_patched_version": {
          "identifier": "9.0.0"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/dependabot/alerts/8",
      "html_url": "https://github.com/Champmsecurity/juice-shop_Ghas/security/dependabot/8",
      "created_at": "2025-06-17T09:20:49Z",
      "updated_at": "2025-06-17T09:20:49Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 7,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "sanitize-html"
        },
        "manifest_path": "package.json",
        "scope": "runtime",
        "relationship": "direct"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-rjqq-98f6-6j3r",
        "cve_id": "CVE-2021-26539",
        "summary": "Improper Input Validation in sanitize-html",
        "description": "Apostrophe Technologies sanitize-html before 2.3.1 does not properly handle internationalized domain name (IDN) which could allow an attacker to bypass hostname whitelist validation set by the \"allowedIframeHostnames\" option.",
        "severity": "medium",
        "identifiers": [
          {
            "value": "GHSA-rjqq-98f6-6j3r",
            "type": "GHSA"
          },
          {
            "value": "CVE-2021-26539",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-26539"
          },
          {
            "url": "https://github.com/apostrophecms/sanitize-html/pull/458"
          },
          {
            "url": "https://advisory.checkmarx.net/advisory/CX-2021-4308"
          },
          {
            "url": "https://github.com/apostrophecms/sanitize-html/blob/main/CHANGELOG.md#231-2021-01-22"
          },
          {
            "url": "https://github.com/apostrophecms/sanitize-html/commit/bdf7836ef8f0e5b21f9a1aab0623ae8fcd09c1da"
          },
          {
            "url": "https://github.com/advisories/GHSA-rjqq-98f6-6j3r"
          }
        ],
        "published_at": "2021-05-06T16:10:05Z",
        "updated_at": "2023-04-21T19:19:09Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "sanitize-html"
            },
            "severity": "medium",
            "vulnerable_version_range": "< 2.3.1",
            "first_patched_version": {
              "identifier": "2.3.1"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "score": 5.3
          },
          "cvss_v4": {
            "vector_string": null,
            "score": 0.0
          }
        },
        "epss": {
          "percentage": 0.00288,
          "percentile": 0.51774
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "score": 5.3
        },
        "cwes": [
          {
            "cwe_id": "CWE-20",
            "name": "Improper Input Validation"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "sanitize-html"
        },
        "severity": "medium",
        "vulnerable_version_range": "< 2.3.1",
        "first_patched_version": {
          "identifier": "2.3.1"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/dependabot/alerts/7",
      "html_url": "https://github.com/Champmsecurity/juice-shop_Ghas/security/dependabot/7",
      "created_at": "2025-06-17T09:20:49Z",
      "updated_at": "2025-06-17T09:20:49Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 6,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "sanitize-html"
        },
        "manifest_path": "package.json",
        "scope": "runtime",
        "relationship": "direct"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-mjxr-4v3x-q3m4",
        "cve_id": "CVE-2021-26540",
        "summary": "Improper Input Validation in sanitize-html",
        "description": "Apostrophe Technologies sanitize-html before 2.3.2 does not properly validate the hostnames set by the \"allowedIframeHostnames\" option when the \"allowIframeRelativeUrls\" is set to true, which allows attackers to bypass hostname whitelist for iframe element, related using an src value that starts with \"/\\\\example.com\".",
        "severity": "medium",
        "identifiers": [
          {
            "value": "GHSA-mjxr-4v3x-q3m4",
            "type": "GHSA"
          },
          {
            "value": "CVE-2021-26540",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2021-26540"
          },
          {
            "url": "https://github.com/apostrophecms/sanitize-html/pull/460"
          },
          {
            "url": "https://advisory.checkmarx.net/advisory/CX-2021-4309"
          },
          {
            "url": "https://github.com/apostrophecms/sanitize-html/blob/main/CHANGELOG.md#232-2021-01-26"
          },
          {
            "url": "https://github.com/advisories/GHSA-mjxr-4v3x-q3m4"
          }
        ],
        "published_at": "2021-05-06T16:10:19Z",
        "updated_at": "2023-02-01T05:05:21Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "sanitize-html"
            },
            "severity": "medium",
            "vulnerable_version_range": "< 2.3.2",
            "first_patched_version": {
              "identifier": "2.3.2"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
            "score": 5.3
          },
          "cvss_v4": {
            "vector_string": null,
            "score": 0.0
          }
        },
        "epss": {
          "percentage": 0.00288,
          "percentile": 0.51731
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
          "score": 5.3
        },
        "cwes": [
          {
            "cwe_id": "CWE-20",
            "name": "Improper Input Validation"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "sanitize-html"
        },
        "severity": "medium",
        "vulnerable_version_range": "< 2.3.2",
        "first_patched_version": {
          "identifier": "2.3.2"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/dependabot/alerts/6",
      "html_url": "https://github.com/Champmsecurity/juice-shop_Ghas/security/dependabot/6",
      "created_at": "2025-06-17T09:20:48Z",
      "updated_at": "2025-06-17T09:20:48Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 5,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "marsdb"
        },
        "manifest_path": "package.json",
        "scope": "runtime",
        "relationship": "direct"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-5mrr-rgp6-x4gr",
        "cve_id": null,
        "summary": "Command Injection in marsdb",
        "description": "All versions of `marsdb` are vulnerable to Command Injection. In the `DocumentMatcher` class, selectors on `$where` clauses are passed to a Function constructor unsanitized. This allows attackers to run arbitrary commands in the system when the function is executed.\n\n\n## Recommendation\n\nNo fix is currently available. Consider using an alternative package until a fix is made available.",
        "severity": "critical",
        "identifiers": [
          {
            "value": "GHSA-5mrr-rgp6-x4gr",
            "type": "GHSA"
          }
        ],
        "references": [
          {
            "url": "https://github.com/bkimminich/juice-shop/issues/1173"
          },
          {
            "url": "https://www.npmjs.com/advisories/1122"
          },
          {
            "url": "https://github.com/advisories/GHSA-5mrr-rgp6-x4gr"
          }
        ],
        "published_at": "2020-09-03T19:39:05Z",
        "updated_at": "2023-01-09T05:03:48Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "marsdb"
            },
            "severity": "critical",
            "vulnerable_version_range": ">= 0.0.0",
            "first_patched_version": null
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": null,
            "score": 0.0
          },
          "cvss_v4": {
            "vector_string": null,
            "score": 0.0
          }
        },
        "cvss": {
          "vector_string": null,
          "score": 0.0
        },
        "cwes": [
          {
            "cwe_id": "CWE-77",
            "name": "Improper Neutralization of Special Elements used in a Command ('Command Injection')"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "marsdb"
        },
        "severity": "critical",
        "vulnerable_version_range": ">= 0.0.0",
        "first_patched_version": null
      },
      "url": "https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/dependabot/alerts/5",
      "html_url": "https://github.com/Champmsecurity/juice-shop_Ghas/security/dependabot/5",
      "created_at": "2025-06-17T09:20:48Z",
      "updated_at": "2025-06-17T09:20:48Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 4,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "express-jwt"
        },
        "manifest_path": "package.json",
        "scope": "runtime",
        "relationship": "direct"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-6g6m-m6h5-w9gf",
        "cve_id": "CVE-2020-15084",
        "summary": "Authorization bypass in express-jwt",
        "description": "### Overview\nVersions before and including 5.3.3, we are not enforcing the **algorithms** entry to be specified in the configuration.\nWhen **algorithms** is not specified in the configuration, with the combination of jwks-rsa, it may lead to authorization bypass. \n\n### Am I affected?\nYou are affected by this vulnerability if all of the following conditions apply:\n\nYou are using express-jwt\nAND \nYou do not have **algorithms**  configured in your express-jwt configuration.\nAND\nYou are using libraries such as jwks-rsa as the **secret**. \n\n### How to fix that?\nSpecify **algorithms** in the express-jwt configuration. The following is an example of a proper configuration\n\n``` \nconst checkJwt = jwt({\n  secret: jwksRsa.expressJwtSecret({\n    rateLimit: true,\n    jwksRequestsPerMinute: 5,\n    jwksUri: `https://${DOMAIN}/.well-known/jwks.json`\n  }),\n  // Validate the audience and the issuer.\n  audience: process.env.AUDIENCE,\n  issuer: `https://${DOMAIN}/`,\n  // restrict allowed algorithms\n  algorithms: ['RS256']\n}); \n```\n\n### Will this update impact my users?\nThe fix provided in patch will not affect your users if you specified the algorithms allowed. The patch now makes **algorithms** a required configuration. \n\n\n### Credit\nIST Group",
        "severity": "high",
        "identifiers": [
          {
            "value": "GHSA-6g6m-m6h5-w9gf",
            "type": "GHSA"
          },
          {
            "value": "CVE-2020-15084",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://github.com/auth0/express-jwt/security/advisories/GHSA-6g6m-m6h5-w9gf"
          },
          {
            "url": "https://github.com/auth0/express-jwt/commit/7ecab5f8f0cab5297c2b863596566eb0c019cdef"
          },
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-15084"
          },
          {
            "url": "https://github.com/advisories/GHSA-6g6m-m6h5-w9gf"
          }
        ],
        "published_at": "2020-06-30T16:05:24Z",
        "updated_at": "2023-02-02T05:04:02Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "express-jwt"
            },
            "severity": "high",
            "vulnerable_version_range": "<= 5.3.3",
            "first_patched_version": {
              "identifier": "6.0.0"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N",
            "score": 7.7
          },
          "cvss_v4": {
            "vector_string": null,
            "score": 0.0
          }
        },
        "epss": {
          "percentage": 0.00064,
          "percentile": 0.20109
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N",
          "score": 7.7
        },
        "cwes": [
          {
            "cwe_id": "CWE-285",
            "name": "Improper Authorization"
          },
          {
            "cwe_id": "CWE-863",
            "name": "Incorrect Authorization"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "express-jwt"
        },
        "severity": "high",
        "vulnerable_version_range": "<= 5.3.3",
        "first_patched_version": {
          "identifier": "6.0.0"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/dependabot/alerts/4",
      "html_url": "https://github.com/Champmsecurity/juice-shop_Ghas/security/dependabot/4",
      "created_at": "2025-06-17T09:20:48Z",
      "updated_at": "2025-06-17T09:20:48Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 3,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "sanitize-html"
        },
        "manifest_path": "package.json",
        "scope": "runtime",
        "relationship": "direct"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-3j7m-hmh3-9jmp",
        "cve_id": "CVE-2016-1000237",
        "summary": "Cross-Site Scripting in sanitize-html",
        "description": "Affected versions of `sanitize-html` do not sanitize input recursively, which may allow an attacker to execute arbitrary Javascript.\n\n\n## Recommendation\n\nUpdate to version 1.4.3 or later.",
        "severity": "medium",
        "identifiers": [
          {
            "value": "GHSA-3j7m-hmh3-9jmp",
            "type": "GHSA"
          },
          {
            "value": "CVE-2016-1000237",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2016-1000237"
          },
          {
            "url": "https://github.com/apostrophecms/sanitize-html/issues/29"
          },
          {
            "url": "https://github.com/apostrophecms/sanitize-html/commit/762fbc7bba389f3f789cc291c1eb2b64f60f2caf"
          },
          {
            "url": "https://raw.githubusercontent.com/distributedweaknessfiling/cvelist/master/2016/1000xxx/CVE-2016-1000237.json"
          },
          {
            "url": "https://github.com/punkave/sanitize-html/issues/29"
          },
          {
            "url": "https://www.npmjs.com/advisories/135"
          },
          {
            "url": "https://github.com/advisories/GHSA-3j7m-hmh3-9jmp"
          }
        ],
        "published_at": "2020-04-16T03:14:47Z",
        "updated_at": "2023-01-09T05:02:23Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "sanitize-html"
            },
            "severity": "medium",
            "vulnerable_version_range": "< 1.4.3",
            "first_patched_version": {
              "identifier": "1.4.3"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
            "score": 6.1
          },
          "cvss_v4": {
            "vector_string": null,
            "score": 0.0
          }
        },
        "epss": {
          "percentage": 0.00328,
          "percentile": 0.54776
        },
        "cvss": {
          "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "score": 6.1
        },
        "cwes": [
          {
            "cwe_id": "CWE-79",
            "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "sanitize-html"
        },
        "severity": "medium",
        "vulnerable_version_range": "< 1.4.3",
        "first_patched_version": {
          "identifier": "1.4.3"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/dependabot/alerts/3",
      "html_url": "https://github.com/Champmsecurity/juice-shop_Ghas/security/dependabot/3",
      "created_at": "2025-06-17T09:20:48Z",
      "updated_at": "2025-06-17T09:20:48Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 2,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "sanitize-html"
        },
        "manifest_path": "package.json",
        "scope": "runtime",
        "relationship": "direct"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-xc6g-ggrc-qq4r",
        "cve_id": "CVE-2017-16016",
        "summary": "Cross-Site Scripting in sanitize-html",
        "description": "Affected versions of `sanitize-html` are vulnerable to cross-site scripting when allowedTags includes at least one `nonTextTag`.\n\n## Proof of Concept\n\n```js\nvar sanitizeHtml = require('sanitize-html');\n\nvar dirty = '!<textarea>&lt;/textarea&gt;<svg/onload=prompt`xs`&gt;</textarea>!';\nvar clean = sanitizeHtml(dirty, {\n    allowedTags: [ 'textarea' ]\n});\n\nconsole.log(clean);\n\n// !<textarea></textarea><svg/onload=prompt`xs`></textarea>!\n```\n\n\n## Recommendation\n\nUpdate to version 1.11.4 or later.",
        "severity": "medium",
        "identifiers": [
          {
            "value": "GHSA-xc6g-ggrc-qq4r",
            "type": "GHSA"
          },
          {
            "value": "CVE-2017-16016",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-16016"
          },
          {
            "url": "https://github.com/punkave/sanitize-html/issues/100"
          },
          {
            "url": "https://github.com/punkave/sanitize-html/commit/5d205a1005ba0df80e21d8c64a15bb3accdb2403)))"
          },
          {
            "url": "https://github.com/advisories/GHSA-xc6g-ggrc-qq4r"
          },
          {
            "url": "https://npmjs.com/package/sanitize-html#discarding-the-entire-contents-of-a-disallowed-tag"
          },
          {
            "url": "https://www.npmjs.com/advisories/154"
          },
          {
            "url": "https://github.com/punkave/sanitize-html/commit/5d205a1005ba0df80e21d8c64a15bb3accdb2403"
          }
        ],
        "published_at": "2018-11-09T17:47:23Z",
        "updated_at": "2023-09-08T23:04:55Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "sanitize-html"
            },
            "severity": "medium",
            "vulnerable_version_range": "<= 1.11.1",
            "first_patched_version": {
              "identifier": "1.11.4"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": null,
            "score": 0.0
          },
          "cvss_v4": {
            "vector_string": null,
            "score": 0.0
          }
        },
        "epss": {
          "percentage": 0.00286,
          "percentile": 0.51619
        },
        "cvss": {
          "vector_string": null,
          "score": 0.0
        },
        "cwes": [
          {
            "cwe_id": "CWE-79",
            "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "sanitize-html"
        },
        "severity": "medium",
        "vulnerable_version_range": "<= 1.11.1",
        "first_patched_version": {
          "identifier": "1.11.4"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/dependabot/alerts/2",
      "html_url": "https://github.com/Champmsecurity/juice-shop_Ghas/security/dependabot/2",
      "created_at": "2025-06-17T09:20:48Z",
      "updated_at": "2025-06-17T09:20:48Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    },
    {
      "number": 1,
      "state": "open",
      "dependency": {
        "package": {
          "ecosystem": "npm",
          "name": "jsonwebtoken"
        },
        "manifest_path": "package.json",
        "scope": "runtime",
        "relationship": "direct"
      },
      "security_advisory": {
        "ghsa_id": "GHSA-c7hr-j4mj-j2w6",
        "cve_id": "CVE-2015-9235",
        "summary": "Verification Bypass in jsonwebtoken",
        "description": "Versions 4.2.1 and earlier of `jsonwebtoken` are affected by a verification bypass vulnerability. This is a result of weak validation of the JWT algorithm type, occuring when an attacker is allowed to arbitrarily specify the JWT algorithm.\n\n\n\n\n## Recommendation\n\nUpdate to version 4.2.2 or later.",
        "severity": "critical",
        "identifiers": [
          {
            "value": "GHSA-c7hr-j4mj-j2w6",
            "type": "GHSA"
          },
          {
            "value": "CVE-2015-9235",
            "type": "CVE"
          }
        ],
        "references": [
          {
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2015-9235"
          },
          {
            "url": "https://github.com/auth0/node-jsonwebtoken/commit/1bb584bc382295eeb7ee8c4452a673a77a68b687"
          },
          {
            "url": "https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/"
          },
          {
            "url": "https://github.com/advisories/GHSA-c7hr-j4mj-j2w6"
          },
          {
            "url": "https://www.npmjs.com/advisories/17"
          },
          {
            "url": "https://www.timmclean.net/2015/02/25/jwt-alg-none.html"
          }
        ],
        "published_at": "2018-10-09T00:38:30Z",
        "updated_at": "2023-01-09T05:02:50Z",
        "withdrawn_at": null,
        "vulnerabilities": [
          {
            "package": {
              "ecosystem": "npm",
              "name": "jsonwebtoken"
            },
            "severity": "critical",
            "vulnerable_version_range": "< 4.2.2",
            "first_patched_version": {
              "identifier": "4.2.2"
            }
          }
        ],
        "cvss_severities": {
          "cvss_v3": {
            "vector_string": null,
            "score": 0.0
          },
          "cvss_v4": {
            "vector_string": null,
            "score": 0.0
          }
        },
        "epss": {
          "percentage": 0.41149,
          "percentile": 0.97212
        },
        "cvss": {
          "vector_string": null,
          "score": 0.0
        },
        "cwes": [
          {
            "cwe_id": "CWE-20",
            "name": "Improper Input Validation"
          }
        ]
      },
      "security_vulnerability": {
        "package": {
          "ecosystem": "npm",
          "name": "jsonwebtoken"
        },
        "severity": "critical",
        "vulnerable_version_range": "< 4.2.2",
        "first_patched_version": {
          "identifier": "4.2.2"
        }
      },
      "url": "https://api.github.com/repos/Champmsecurity/juice-shop_Ghas/dependabot/alerts/1",
      "html_url": "https://github.com/Champmsecurity/juice-shop_Ghas/security/dependabot/1",
      "created_at": "2025-06-17T09:20:48Z",
      "updated_at": "2025-06-17T09:20:48Z",
      "dismissed_at": null,
      "dismissed_by": null,
      "dismissed_reason": null,
      "dismissed_comment": null,
      "fixed_at": null,
      "auto_dismissed_at": null
    }
  ],
  "zap": {
    "@programName": "ZAP",
    "@version": "2.16.1",
    "@generated": "Tue, 17 Jun 2025 11:15:22",
    "site": [
      {
        "@name": "https://preview.owasp-juice.shop",
        "@host": "preview.owasp-juice.shop",
        "@port": "443",
        "@ssl": "true",
        "alerts": [
          {
            "pluginid": "10038",
            "alertRef": "10038-1",
            "alert": "Content Security Policy (CSP) Header Not Set",
            "name": "Content Security Policy (CSP) Header Not Set",
            "riskcode": "2",
            "confidence": "3",
            "riskdesc": "Medium (High)",
            "desc": "<p>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page — covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</p>",
            "instances": [
              {
                "id": "2",
                "uri": "https://preview.owasp-juice.shop",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "102",
                "uri": "https://preview.owasp-juice.shop/app/build/routes/fileServer.js:59:18",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "106",
                "uri": "https://preview.owasp-juice.shop/app/node_modules/express/lib/router/index.js:365:14",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "80",
                "uri": "https://preview.owasp-juice.shop/ftp",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "76",
                "uri": "https://preview.owasp-juice.shop/ftp/coupons_2013.md.bak",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "81",
                "uri": "https://preview.owasp-juice.shop/ftp/eastere.gg",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "87",
                "uri": "https://preview.owasp-juice.shop/ftp/encrypt.pyc",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "92",
                "uri": "https://preview.owasp-juice.shop/ftp/package-lock.json.bak",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "97",
                "uri": "https://preview.owasp-juice.shop/ftp/package.json.bak",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "100",
                "uri": "https://preview.owasp-juice.shop/ftp/suspicious_errors.yml",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "47",
                "uri": "https://preview.owasp-juice.shop/sitemap.xml",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              }
            ],
            "count": "11",
            "solution": "<p>Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.</p>",
            "otherinfo": "",
            "reference": "<p>https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy</p><p>https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html</p><p>https://www.w3.org/TR/CSP/</p><p>https://w3c.github.io/webappsec-csp/</p><p>https://web.dev/articles/csp</p><p>https://caniuse.com/#feat=contentsecuritypolicy</p><p>https://content-security-policy.com/</p>",
            "cweid": "693",
            "wascid": "15",
            "sourceid": "6"
          },
          {
            "pluginid": "10098",
            "alertRef": "10098",
            "alert": "Cross-Domain Misconfiguration",
            "name": "Cross-Domain Misconfiguration",
            "riskcode": "2",
            "confidence": "2",
            "riskdesc": "Medium (Medium)",
            "desc": "<p>Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.</p>",
            "instances": [
              {
                "id": "5",
                "uri": "https://preview.owasp-juice.shop",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "Access-Control-Allow-Origin: *",
                "otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
              },
              {
                "id": "30",
                "uri": "https://preview.owasp-juice.shop/assets/public/favicon_js.ico",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "Access-Control-Allow-Origin: *",
                "otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
              },
              {
                "id": "77",
                "uri": "https://preview.owasp-juice.shop/ftp/acquisitions.md",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "Access-Control-Allow-Origin: *",
                "otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
              },
              {
                "id": "84",
                "uri": "https://preview.owasp-juice.shop/ftp/eastere.gg",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "Access-Control-Allow-Origin: *",
                "otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
              },
              {
                "id": "63",
                "uri": "https://preview.owasp-juice.shop/main.js",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "Access-Control-Allow-Origin: *",
                "otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
              },
              {
                "id": "46",
                "uri": "https://preview.owasp-juice.shop/polyfills.js",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "Access-Control-Allow-Origin: *",
                "otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
              },
              {
                "id": "33",
                "uri": "https://preview.owasp-juice.shop/robots.txt",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "Access-Control-Allow-Origin: *",
                "otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
              },
              {
                "id": "39",
                "uri": "https://preview.owasp-juice.shop/runtime.js",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "Access-Control-Allow-Origin: *",
                "otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
              },
              {
                "id": "48",
                "uri": "https://preview.owasp-juice.shop/sitemap.xml",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "Access-Control-Allow-Origin: *",
                "otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
              },
              {
                "id": "44",
                "uri": "https://preview.owasp-juice.shop/styles.css",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "Access-Control-Allow-Origin: *",
                "otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
              },
              {
                "id": "69",
                "uri": "https://preview.owasp-juice.shop/vendor.js",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "Access-Control-Allow-Origin: *",
                "otherinfo": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing."
              }
            ],
            "count": "11",
            "solution": "<p>Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).</p><p>Configure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.</p>",
            "otherinfo": "<p>The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.</p>",
            "reference": "<p>https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy</p>",
            "cweid": "264",
            "wascid": "14",
            "sourceid": "1"
          },
          {
            "pluginid": "10017",
            "alertRef": "10017",
            "alert": "Cross-Domain JavaScript Source File Inclusion",
            "name": "Cross-Domain JavaScript Source File Inclusion",
            "riskcode": "1",
            "confidence": "2",
            "riskdesc": "Low (Medium)",
            "desc": "<p>The page includes one or more script files from a third-party domain.</p>",
            "instances": [
              {
                "id": "6",
                "uri": "https://preview.owasp-juice.shop",
                "method": "GET",
                "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
                "attack": "",
                "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
                "otherinfo": ""
              },
              {
                "id": "8",
                "uri": "https://preview.owasp-juice.shop",
                "method": "GET",
                "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
                "attack": "",
                "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
                "otherinfo": ""
              },
              {
                "id": "110",
                "uri": "https://preview.owasp-juice.shop/",
                "method": "GET",
                "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
                "attack": "",
                "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
                "otherinfo": ""
              },
              {
                "id": "111",
                "uri": "https://preview.owasp-juice.shop/",
                "method": "GET",
                "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
                "attack": "",
                "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
                "otherinfo": ""
              },
              {
                "id": "103",
                "uri": "https://preview.owasp-juice.shop/app/build/routes/fileServer.js:59:18",
                "method": "GET",
                "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
                "attack": "",
                "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
                "otherinfo": ""
              },
              {
                "id": "104",
                "uri": "https://preview.owasp-juice.shop/app/build/routes/fileServer.js:59:18",
                "method": "GET",
                "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
                "attack": "",
                "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
                "otherinfo": ""
              },
              {
                "id": "107",
                "uri": "https://preview.owasp-juice.shop/app/node_modules/express/lib/router/index.js:365:14",
                "method": "GET",
                "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
                "attack": "",
                "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
                "otherinfo": ""
              },
              {
                "id": "108",
                "uri": "https://preview.owasp-juice.shop/app/node_modules/express/lib/router/index.js:365:14",
                "method": "GET",
                "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
                "attack": "",
                "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
                "otherinfo": ""
              },
              {
                "id": "49",
                "uri": "https://preview.owasp-juice.shop/sitemap.xml",
                "method": "GET",
                "param": "//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js",
                "attack": "",
                "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
                "otherinfo": ""
              },
              {
                "id": "50",
                "uri": "https://preview.owasp-juice.shop/sitemap.xml",
                "method": "GET",
                "param": "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js",
                "attack": "",
                "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>",
                "otherinfo": ""
              }
            ],
            "count": "10",
            "solution": "<p>Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.</p>",
            "otherinfo": "",
            "reference": "",
            "cweid": "829",
            "wascid": "15",
            "sourceid": "6"
          },
          {
            "pluginid": "10110",
            "alertRef": "10110",
            "alert": "Dangerous JS Functions",
            "name": "Dangerous JS Functions",
            "riskcode": "1",
            "confidence": "1",
            "riskdesc": "Low (Low)",
            "desc": "<p>A dangerous JS function seems to be in use that would leave the site vulnerable.</p>",
            "instances": [
              {
                "id": "67",
                "uri": "https://preview.owasp-juice.shop/main.js",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "bypassSecurityTrustHtml(",
                "otherinfo": ""
              },
              {
                "id": "73",
                "uri": "https://preview.owasp-juice.shop/vendor.js",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "bypassSecurityTrustHtml(",
                "otherinfo": ""
              }
            ],
            "count": "2",
            "solution": "<p>See the references for security advice on the use of these functions.</p>",
            "otherinfo": "",
            "reference": "<p>https://angular.io/guide/security</p>",
            "cweid": "749",
            "wascid": "-1",
            "sourceid": "21"
          },
          {
            "pluginid": "10063",
            "alertRef": "10063-2",
            "alert": "Deprecated Feature Policy Header Set",
            "name": "Deprecated Feature Policy Header Set",
            "riskcode": "1",
            "confidence": "2",
            "riskdesc": "Low (Medium)",
            "desc": "<p>The header has now been renamed to Permissions-Policy.</p>",
            "instances": [
              {
                "id": "24",
                "uri": "https://preview.owasp-juice.shop",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "Feature-Policy",
                "otherinfo": ""
              },
              {
                "id": "93",
                "uri": "https://preview.owasp-juice.shop/ftp",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "Feature-Policy",
                "otherinfo": ""
              },
              {
                "id": "89",
                "uri": "https://preview.owasp-juice.shop/ftp/eastere.gg",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "Feature-Policy",
                "otherinfo": ""
              },
              {
                "id": "90",
                "uri": "https://preview.owasp-juice.shop/ftp/encrypt.pyc",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "Feature-Policy",
                "otherinfo": ""
              },
              {
                "id": "68",
                "uri": "https://preview.owasp-juice.shop/main.js",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "Feature-Policy",
                "otherinfo": ""
              },
              {
                "id": "60",
                "uri": "https://preview.owasp-juice.shop/polyfills.js",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "Feature-Policy",
                "otherinfo": ""
              },
              {
                "id": "43",
                "uri": "https://preview.owasp-juice.shop/runtime.js",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "Feature-Policy",
                "otherinfo": ""
              },
              {
                "id": "57",
                "uri": "https://preview.owasp-juice.shop/sitemap.xml",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "Feature-Policy",
                "otherinfo": ""
              },
              {
                "id": "74",
                "uri": "https://preview.owasp-juice.shop/vendor.js",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "Feature-Policy",
                "otherinfo": ""
              }
            ],
            "count": "9",
            "solution": "<p>Ensure that your web server, application server, load balancer, etc. is configured to set the Permissions-Policy header instead of the Feature-Policy header.</p>",
            "otherinfo": "",
            "reference": "<p>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permissions-Policy</p><p>https://scotthelme.co.uk/goodbye-feature-policy-and-hello-permissions-policy/</p>",
            "cweid": "16",
            "wascid": "15",
            "sourceid": "1"
          },
          {
            "pluginid": "90004",
            "alertRef": "90004-2",
            "alert": "Insufficient Site Isolation Against Spectre Vulnerability",
            "name": "Insufficient Site Isolation Against Spectre Vulnerability",
            "riskcode": "1",
            "confidence": "2",
            "riskdesc": "Low (Medium)",
            "desc": "<p>Cross-Origin-Embedder-Policy header is a response header that prevents a document from loading any cross-origin resources that don't explicitly grant the document permission (using CORP or CORS).</p>",
            "instances": [
              {
                "id": "26",
                "uri": "https://preview.owasp-juice.shop",
                "method": "GET",
                "param": "Cross-Origin-Embedder-Policy",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "113",
                "uri": "https://preview.owasp-juice.shop/app/build/routes/fileServer.js:59:18",
                "method": "GET",
                "param": "Cross-Origin-Embedder-Policy",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "117",
                "uri": "https://preview.owasp-juice.shop/app/node_modules/express/lib/router/index.js:365:14",
                "method": "GET",
                "param": "Cross-Origin-Embedder-Policy",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "94",
                "uri": "https://preview.owasp-juice.shop/ftp",
                "method": "GET",
                "param": "Cross-Origin-Embedder-Policy",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "58",
                "uri": "https://preview.owasp-juice.shop/sitemap.xml",
                "method": "GET",
                "param": "Cross-Origin-Embedder-Policy",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "27",
                "uri": "https://preview.owasp-juice.shop",
                "method": "GET",
                "param": "Cross-Origin-Opener-Policy",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "114",
                "uri": "https://preview.owasp-juice.shop/app/build/routes/fileServer.js:59:18",
                "method": "GET",
                "param": "Cross-Origin-Opener-Policy",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "118",
                "uri": "https://preview.owasp-juice.shop/app/node_modules/express/lib/router/index.js:365:14",
                "method": "GET",
                "param": "Cross-Origin-Opener-Policy",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "95",
                "uri": "https://preview.owasp-juice.shop/ftp",
                "method": "GET",
                "param": "Cross-Origin-Opener-Policy",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "59",
                "uri": "https://preview.owasp-juice.shop/sitemap.xml",
                "method": "GET",
                "param": "Cross-Origin-Opener-Policy",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              }
            ],
            "count": "10",
            "solution": "<p>Ensure that the application/web server sets the Cross-Origin-Embedder-Policy header appropriately, and that it sets the Cross-Origin-Embedder-Policy header to 'require-corp' for documents.</p><p>If possible, ensure that the end user uses a standards-compliant and modern web browser that supports the Cross-Origin-Embedder-Policy header (https://caniuse.com/mdn-http_headers_cross-origin-embedder-policy).</p>",
            "otherinfo": "",
            "reference": "<p>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Embedder-Policy</p>",
            "cweid": "693",
            "wascid": "14",
            "sourceid": "6"
          },
          {
            "pluginid": "10063",
            "alertRef": "10063-1",
            "alert": "Permissions Policy Header Not Set",
            "name": "Permissions Policy Header Not Set",
            "riskcode": "1",
            "confidence": "2",
            "riskdesc": "Low (Medium)",
            "desc": "<p>Permissions Policy Header is an added layer of security that helps to restrict from unauthorized access or usage of browser/client features by web resources. This policy ensures the user privacy by limiting or specifying the features of the browsers can be used by the web resources. Permissions Policy provides a set of standard HTTP headers that allow website owners to limit which features of browsers can be used by the page such as camera, microphone, location, full screen etc.</p>",
            "instances": [
              {
                "id": "88",
                "uri": "https://preview.owasp-juice.shop/ftp/coupons_2013.md.bak",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "98",
                "uri": "https://preview.owasp-juice.shop/ftp/package-lock.json.bak",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              }
            ],
            "count": "2",
            "solution": "<p>Ensure that your web server, application server, load balancer, etc. is configured to set the Permissions-Policy header.</p>",
            "otherinfo": "",
            "reference": "<p>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permissions-Policy</p><p>https://developer.chrome.com/blog/feature-policy/</p><p>https://scotthelme.co.uk/a-new-security-header-feature-policy/</p><p>https://w3c.github.io/webappsec-feature-policy/</p><p>https://www.smashingmagazine.com/2018/12/feature-policy/</p>",
            "cweid": "693",
            "wascid": "15",
            "sourceid": "38"
          },
          {
            "pluginid": "10036",
            "alertRef": "10036",
            "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field",
            "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field",
            "riskcode": "1",
            "confidence": "3",
            "riskdesc": "Low (High)",
            "desc": "<p>The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.</p>",
            "instances": [
              {
                "id": "82",
                "uri": "https://preview.owasp-juice.shop/ftp/coupons_2013.md.bak",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "Apache/2.4.63 (Unix)",
                "otherinfo": ""
              },
              {
                "id": "96",
                "uri": "https://preview.owasp-juice.shop/ftp/package-lock.json.bak",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "Apache/2.4.63 (Unix)",
                "otherinfo": ""
              },
              {
                "id": "99",
                "uri": "https://preview.owasp-juice.shop/ftp/package.json.bak",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "Apache/2.4.63 (Unix)",
                "otherinfo": ""
              }
            ],
            "count": "3",
            "solution": "<p>Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.</p>",
            "otherinfo": "",
            "reference": "<p>https://httpd.apache.org/docs/current/mod/core.html#servertokens</p><p>https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)</p><p>https://www.troyhunt.com/shhh-dont-let-your-response-headers/</p>",
            "cweid": "497",
            "wascid": "13",
            "sourceid": "38"
          },
          {
            "pluginid": "10035",
            "alertRef": "10035-1",
            "alert": "Strict-Transport-Security Header Not Set",
            "name": "Strict-Transport-Security Header Not Set",
            "riskcode": "1",
            "confidence": "3",
            "riskdesc": "Low (High)",
            "desc": "<p>HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.</p>",
            "instances": [
              {
                "id": "12",
                "uri": "https://preview.owasp-juice.shop",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "32",
                "uri": "https://preview.owasp-juice.shop/assets/public/favicon_js.ico",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "79",
                "uri": "https://preview.owasp-juice.shop/ftp/acquisitions.md",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "85",
                "uri": "https://preview.owasp-juice.shop/ftp/coupons_2013.md.bak",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "65",
                "uri": "https://preview.owasp-juice.shop/main.js",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "51",
                "uri": "https://preview.owasp-juice.shop/polyfills.js",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "35",
                "uri": "https://preview.owasp-juice.shop/robots.txt",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "40",
                "uri": "https://preview.owasp-juice.shop/runtime.js",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "54",
                "uri": "https://preview.owasp-juice.shop/sitemap.xml",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "61",
                "uri": "https://preview.owasp-juice.shop/styles.css",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "71",
                "uri": "https://preview.owasp-juice.shop/vendor.js",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              }
            ],
            "count": "11",
            "solution": "<p>Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.</p>",
            "otherinfo": "",
            "reference": "<p>https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html</p><p>https://owasp.org/www-community/Security_Headers</p><p>https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security</p><p>https://caniuse.com/stricttransportsecurity</p><p>https://datatracker.ietf.org/doc/html/rfc6797</p>",
            "cweid": "319",
            "wascid": "15",
            "sourceid": "1"
          },
          {
            "pluginid": "10096",
            "alertRef": "10096",
            "alert": "Timestamp Disclosure - Unix",
            "name": "Timestamp Disclosure - Unix",
            "riskcode": "1",
            "confidence": "1",
            "riskdesc": "Low (Low)",
            "desc": "<p>A timestamp was disclosed by the application/web server. - Unix</p>",
            "instances": [
              {
                "id": "16",
                "uri": "https://preview.owasp-juice.shop",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "1650485437",
                "otherinfo": "1650485437, which evaluates to: 2022-04-20 20:10:37."
              },
              {
                "id": "21",
                "uri": "https://preview.owasp-juice.shop",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "1981395349",
                "otherinfo": "1981395349, which evaluates to: 2032-10-14 19:35:49."
              },
              {
                "id": "19",
                "uri": "https://preview.owasp-juice.shop",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "2038834951",
                "otherinfo": "2038834951, which evaluates to: 2034-08-10 15:02:31."
              },
              {
                "id": "14",
                "uri": "https://preview.owasp-juice.shop",
                "method": "GET",
                "param": "Reporting-Endpoints",
                "attack": "",
                "evidence": "1750158901",
                "otherinfo": "1750158901, which evaluates to: 2025-06-17 11:15:01."
              },
              {
                "id": "34",
                "uri": "https://preview.owasp-juice.shop/assets/public/favicon_js.ico",
                "method": "GET",
                "param": "Reporting-Endpoints",
                "attack": "",
                "evidence": "1750158902",
                "otherinfo": "1750158902, which evaluates to: 2025-06-17 11:15:02."
              },
              {
                "id": "52",
                "uri": "https://preview.owasp-juice.shop/polyfills.js",
                "method": "GET",
                "param": "Reporting-Endpoints",
                "attack": "",
                "evidence": "1750158902",
                "otherinfo": "1750158902, which evaluates to: 2025-06-17 11:15:02."
              },
              {
                "id": "37",
                "uri": "https://preview.owasp-juice.shop/robots.txt",
                "method": "GET",
                "param": "Reporting-Endpoints",
                "attack": "",
                "evidence": "1750158901",
                "otherinfo": "1750158901, which evaluates to: 2025-06-17 11:15:01."
              },
              {
                "id": "41",
                "uri": "https://preview.owasp-juice.shop/runtime.js",
                "method": "GET",
                "param": "Reporting-Endpoints",
                "attack": "",
                "evidence": "1750158902",
                "otherinfo": "1750158902, which evaluates to: 2025-06-17 11:15:02."
              }
            ],
            "count": "8",
            "solution": "<p>Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.</p>",
            "otherinfo": "<p>1650485437, which evaluates to: 2022-04-20 20:10:37.</p>",
            "reference": "<p>https://cwe.mitre.org/data/definitions/200.html</p>",
            "cweid": "497",
            "wascid": "13",
            "sourceid": "1"
          },
          {
            "pluginid": "10027",
            "alertRef": "10027",
            "alert": "Information Disclosure - Suspicious Comments",
            "name": "Information Disclosure - Suspicious Comments",
            "riskcode": "0",
            "confidence": "1",
            "riskdesc": "Informational (Low)",
            "desc": "<p>The response appears to contain suspicious comments which may help an attacker.</p>",
            "instances": [
              {
                "id": "64",
                "uri": "https://preview.owasp-juice.shop/main.js",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "query",
                "otherinfo": "The following pattern was used: \\bQUERY\\b and was detected in likely comment: \"//owasp.org' target='_blank'>Open Worldwide Application Security Project (OWASP)</a> and is developed and maintained by voluntee\", see evidence field for the suspicious comment/snippet."
              },
              {
                "id": "70",
                "uri": "https://preview.owasp-juice.shop/vendor.js",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "Query",
                "otherinfo": "The following pattern was used: \\bQUERY\\b and was detected in likely comment: \"//www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M0 256C0 397.4 114.6 512 256 512s256-114.6 256-256S397.4 0 256 0S0 114.6 0\", see evidence field for the suspicious comment/snippet."
              }
            ],
            "count": "2",
            "solution": "<p>Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.</p>",
            "otherinfo": "<p>The following pattern was used: \\bQUERY\\b and was detected in likely comment: \"//owasp.org' target='_blank'>Open Worldwide Application Security Project (OWASP)</a> and is developed and maintained by voluntee\", see evidence field for the suspicious comment/snippet.</p>",
            "reference": "",
            "cweid": "615",
            "wascid": "13",
            "sourceid": "21"
          },
          {
            "pluginid": "10109",
            "alertRef": "10109",
            "alert": "Modern Web Application",
            "name": "Modern Web Application",
            "riskcode": "0",
            "confidence": "2",
            "riskdesc": "Informational (Medium)",
            "desc": "<p>The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.</p>",
            "instances": [
              {
                "id": "10",
                "uri": "https://preview.owasp-juice.shop",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
                "otherinfo": "No links have been found while there are scripts, which is an indication that this is a modern web application."
              },
              {
                "id": "116",
                "uri": "https://preview.owasp-juice.shop/",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
                "otherinfo": "No links have been found while there are scripts, which is an indication that this is a modern web application."
              },
              {
                "id": "122",
                "uri": "https://preview.owasp-juice.shop/app/build/routes/fileServer.js:43:13",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
                "otherinfo": "No links have been found while there are scripts, which is an indication that this is a modern web application."
              },
              {
                "id": "112",
                "uri": "https://preview.owasp-juice.shop/app/build/routes/fileServer.js:59:18",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
                "otherinfo": "No links have been found while there are scripts, which is an indication that this is a modern web application."
              },
              {
                "id": "124",
                "uri": "https://preview.owasp-juice.shop/app/node_modules/express/lib/router/index.js:286:9",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
                "otherinfo": "No links have been found while there are scripts, which is an indication that this is a modern web application."
              },
              {
                "id": "121",
                "uri": "https://preview.owasp-juice.shop/app/node_modules/express/lib/router/index.js:328:13",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
                "otherinfo": "No links have been found while there are scripts, which is an indication that this is a modern web application."
              },
              {
                "id": "115",
                "uri": "https://preview.owasp-juice.shop/app/node_modules/express/lib/router/index.js:365:14",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
                "otherinfo": "No links have been found while there are scripts, which is an indication that this is a modern web application."
              },
              {
                "id": "126",
                "uri": "https://preview.owasp-juice.shop/app/node_modules/express/lib/router/index.js:376:14",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
                "otherinfo": "No links have been found while there are scripts, which is an indication that this is a modern web application."
              },
              {
                "id": "125",
                "uri": "https://preview.owasp-juice.shop/app/node_modules/express/lib/router/index.js:421:3",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
                "otherinfo": "No links have been found while there are scripts, which is an indication that this is a modern web application."
              },
              {
                "id": "123",
                "uri": "https://preview.owasp-juice.shop/app/node_modules/express/lib/router/layer.js:95:5",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
                "otherinfo": "No links have been found while there are scripts, which is an indication that this is a modern web application."
              },
              {
                "id": "53",
                "uri": "https://preview.owasp-juice.shop/sitemap.xml",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "<script src=\"//cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js\"></script>",
                "otherinfo": "No links have been found while there are scripts, which is an indication that this is a modern web application."
              }
            ],
            "count": "11",
            "solution": "<p>This is an informational alert and so no changes are required.</p>",
            "otherinfo": "<p>No links have been found while there are scripts, which is an indication that this is a modern web application.</p>",
            "reference": "",
            "cweid": "-1",
            "wascid": "-1",
            "sourceid": "6"
          },
          {
            "pluginid": "10049",
            "alertRef": "10049",
            "alert": "Non-Storable Content",
            "name": "Non-Storable Content",
            "riskcode": "0",
            "confidence": "2",
            "riskdesc": "Informational (Medium)",
            "desc": "<p>The response contents are not storable by caching components such as proxy servers. If the response does not contain sensitive, personal or user-specific information, it may benefit from being stored and cached, to improve performance.</p>",
            "instances": [
              {
                "id": "86",
                "uri": "https://preview.owasp-juice.shop/ftp/coupons_2013.md.bak",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "403",
                "otherinfo": ""
              }
            ],
            "count": "1",
            "solution": "<p>The content may be marked as storable by ensuring that the following conditions are satisfied:</p><p>The request method must be understood by the cache and defined as being cacheable (\"GET\", \"HEAD\", and \"POST\" are currently defined as cacheable)</p><p>The response status code must be understood by the cache (one of the 1XX, 2XX, 3XX, 4XX, or 5XX response classes are generally understood)</p><p>The \"no-store\" cache directive must not appear in the request or response header fields</p><p>For caching by \"shared\" caches such as \"proxy\" caches, the \"private\" response directive must not appear in the response</p><p>For caching by \"shared\" caches such as \"proxy\" caches, the \"Authorization\" header field must not appear in the request, unless the response explicitly allows it (using one of the \"must-revalidate\", \"public\", or \"s-maxage\" Cache-Control response directives)</p><p>In addition to the conditions above, at least one of the following conditions must also be satisfied by the response:</p><p>It must contain an \"Expires\" header field</p><p>It must contain a \"max-age\" response directive</p><p>For \"shared\" caches such as \"proxy\" caches, it must contain a \"s-maxage\" response directive</p><p>It must contain a \"Cache Control Extension\" that allows it to be cached</p><p>It must have a status code that is defined as cacheable by default (200, 203, 204, 206, 300, 301, 404, 405, 410, 414, 501).</p>",
            "otherinfo": "",
            "reference": "<p>https://datatracker.ietf.org/doc/html/rfc7234</p><p>https://datatracker.ietf.org/doc/html/rfc7231</p><p>https://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html</p>",
            "cweid": "524",
            "wascid": "13",
            "sourceid": "38"
          },
          {
            "pluginid": "10015",
            "alertRef": "10015",
            "alert": "Re-examine Cache-control Directives",
            "name": "Re-examine Cache-control Directives",
            "riskcode": "0",
            "confidence": "1",
            "riskdesc": "Informational (Low)",
            "desc": "<p>The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.</p>",
            "instances": [
              {
                "id": "1",
                "uri": "https://preview.owasp-juice.shop",
                "method": "GET",
                "param": "cache-control",
                "attack": "",
                "evidence": "public, max-age=0",
                "otherinfo": ""
              },
              {
                "id": "109",
                "uri": "https://preview.owasp-juice.shop/",
                "method": "GET",
                "param": "cache-control",
                "attack": "",
                "evidence": "public, max-age=0",
                "otherinfo": ""
              },
              {
                "id": "101",
                "uri": "https://preview.owasp-juice.shop/app/build/routes/fileServer.js:59:18",
                "method": "GET",
                "param": "cache-control",
                "attack": "",
                "evidence": "public, max-age=0",
                "otherinfo": ""
              },
              {
                "id": "120",
                "uri": "https://preview.owasp-juice.shop/app/node_modules/express/lib/router/index.js:328:13",
                "method": "GET",
                "param": "cache-control",
                "attack": "",
                "evidence": "public, max-age=0",
                "otherinfo": ""
              },
              {
                "id": "105",
                "uri": "https://preview.owasp-juice.shop/app/node_modules/express/lib/router/index.js:365:14",
                "method": "GET",
                "param": "cache-control",
                "attack": "",
                "evidence": "public, max-age=0",
                "otherinfo": ""
              },
              {
                "id": "78",
                "uri": "https://preview.owasp-juice.shop/ftp",
                "method": "GET",
                "param": "cache-control",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "75",
                "uri": "https://preview.owasp-juice.shop/ftp/acquisitions.md",
                "method": "GET",
                "param": "cache-control",
                "attack": "",
                "evidence": "public, max-age=0",
                "otherinfo": ""
              },
              {
                "id": "119",
                "uri": "https://preview.owasp-juice.shop/ftp/announcement_encrypted.md",
                "method": "GET",
                "param": "cache-control",
                "attack": "",
                "evidence": "public, max-age=0",
                "otherinfo": ""
              },
              {
                "id": "91",
                "uri": "https://preview.owasp-juice.shop/ftp/legal.md",
                "method": "GET",
                "param": "cache-control",
                "attack": "",
                "evidence": "public, max-age=0",
                "otherinfo": ""
              },
              {
                "id": "31",
                "uri": "https://preview.owasp-juice.shop/robots.txt",
                "method": "GET",
                "param": "cache-control",
                "attack": "",
                "evidence": "",
                "otherinfo": ""
              },
              {
                "id": "45",
                "uri": "https://preview.owasp-juice.shop/sitemap.xml",
                "method": "GET",
                "param": "cache-control",
                "attack": "",
                "evidence": "public, max-age=0",
                "otherinfo": ""
              }
            ],
            "count": "11",
            "solution": "<p>For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".</p>",
            "otherinfo": "",
            "reference": "<p>https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching</p><p>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control</p><p>https://grayduck.mn/2021/09/13/cache-control-recommendations/</p>",
            "cweid": "525",
            "wascid": "13",
            "sourceid": "6"
          },
          {
            "pluginid": "10049",
            "alertRef": "10049",
            "alert": "Storable and Cacheable Content",
            "name": "Storable and Cacheable Content",
            "riskcode": "0",
            "confidence": "2",
            "riskdesc": "Informational (Medium)",
            "desc": "<p>The response contents are storable by caching components such as proxy servers, and may be retrieved directly from the cache, rather than from the origin server by the caching servers, in response to similar requests from other users. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where \"shared\" caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.</p>",
            "instances": [
              {
                "id": "38",
                "uri": "https://preview.owasp-juice.shop/robots.txt",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "",
                "otherinfo": "In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234."
              }
            ],
            "count": "1",
            "solution": "<p>Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:</p><p>Cache-Control: no-cache, no-store, must-revalidate, private</p><p>Pragma: no-cache</p><p>Expires: 0</p><p>This configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.</p>",
            "otherinfo": "<p>In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234.</p>",
            "reference": "<p>https://datatracker.ietf.org/doc/html/rfc7234</p><p>https://datatracker.ietf.org/doc/html/rfc7231</p><p>https://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html</p>",
            "cweid": "524",
            "wascid": "13",
            "sourceid": "13"
          },
          {
            "pluginid": "10049",
            "alertRef": "10049",
            "alert": "Storable but Non-Cacheable Content",
            "name": "Storable but Non-Cacheable Content",
            "riskcode": "0",
            "confidence": "2",
            "riskdesc": "Informational (Medium)",
            "desc": "<p>The response contents are storable by caching components such as proxy servers, but will not be retrieved directly from the cache, without validating the request upstream, in response to similar requests from other users.</p>",
            "instances": [
              {
                "id": "22",
                "uri": "https://preview.owasp-juice.shop",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "max-age=0",
                "otherinfo": ""
              },
              {
                "id": "36",
                "uri": "https://preview.owasp-juice.shop/assets/public/favicon_js.ico",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "max-age=0",
                "otherinfo": ""
              },
              {
                "id": "83",
                "uri": "https://preview.owasp-juice.shop/ftp/acquisitions.md",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "max-age=0",
                "otherinfo": ""
              },
              {
                "id": "66",
                "uri": "https://preview.owasp-juice.shop/main.js",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "max-age=0",
                "otherinfo": ""
              },
              {
                "id": "55",
                "uri": "https://preview.owasp-juice.shop/polyfills.js",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "max-age=0",
                "otherinfo": ""
              },
              {
                "id": "42",
                "uri": "https://preview.owasp-juice.shop/runtime.js",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "max-age=0",
                "otherinfo": ""
              },
              {
                "id": "56",
                "uri": "https://preview.owasp-juice.shop/sitemap.xml",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "max-age=0",
                "otherinfo": ""
              },
              {
                "id": "62",
                "uri": "https://preview.owasp-juice.shop/styles.css",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "max-age=0",
                "otherinfo": ""
              },
              {
                "id": "72",
                "uri": "https://preview.owasp-juice.shop/vendor.js",
                "method": "GET",
                "param": "",
                "attack": "",
                "evidence": "max-age=0",
                "otherinfo": ""
              }
            ],
            "count": "9",
            "solution": "",
            "otherinfo": "",
            "reference": "<p>https://datatracker.ietf.org/doc/html/rfc7234</p><p>https://datatracker.ietf.org/doc/html/rfc7231</p><p>https://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html</p>",
            "cweid": "524",
            "wascid": "13",
            "sourceid": "6"
          }
        ]
      }
    ],
    "sequences": []
  }
}
